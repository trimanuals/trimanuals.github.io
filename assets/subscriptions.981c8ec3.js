import{bP as h,an as l,u as g,r as u,aV as s,bC as e,bE as w}from"./index.6def9867.js";const T=h("subscriptions",()=>{const{t:c}=l(),i=g(),n=u({}),p=async r=>{try{const{data:t}=await s.post("/subscriptions",r);return t}catch(t){e(t,!0,c("errors.subscriptionCreationFailed"))}},b=async r=>{try{const{data:t}=await s.get(`/subscriptions/${r}`);n.value=t}catch(t){e(t,!0,c("errors.subscriptionFetchFailed"))}},d=async r=>{try{const{data:t}=await s.patch(`/subscriptions/${r._id}`,r);return t}catch(t){e(t,!0,c("errors.subscriptionUpdateFailed"))}},y=async r=>{try{const{assignedTo:t,_id:a}=r;await s.patch("/subscriptions/own-subscription",{assignedTo:t,_id:a}),i.getAuth()}catch(t){e(t,!0,c("errors.subscriptionUpdateFailed"))}},S=async r=>{try{await s.patch("/subscriptions/change-vin",r),i.getAuth()}catch(t){e(t,!0,c("errors.subscriptionUpdateFailed"))}},o=u([]);return{createSubscription:p,getSubscription:b,viewedSubscription:n,updateSubscription:d,updateOwnSubscription:y,updateSubscriptionSerial:S,userSubscriptions:o,getSubscriptionsByUserId:async r=>{try{const{data:t}=await s.get(`/subscriptions/user-subscriptions/${r}`);return o.value=t,t}catch(t){e(t,!0,c("errors.subscriptionFetchFailed"))}},cancelAndRefund:async(r,t)=>{try{await s.get(`/subscriptions/${r}/cancel`,{params:{refund:t}}),i.getAuth()}catch(a){e(a,!0)}},refundSubscription:async r=>{try{await s.post("/payments/payment-refund",r)}catch(t){e(t,!0,c("errors.failedToRefundPayment"))}},requestAccessToOrgSubscription:async()=>{try{await s.post("/subscriptions/request-access"),w("positive")}catch(r){e(r,!0)}}}});export{T as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
