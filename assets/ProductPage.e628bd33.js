import{bP as et,r as F,aV as fe,bC as _e,ac as te,aJ as Oe,an as ae,aU as Re,a as K,cs as Fe,u as ke,n as $,ap as l,ax as d,as as t,ar as e,aM as Be,aN as Y,aw as S,au as o,aO as Se,bb as $e,by as ie,a6 as oe,aq as R,aZ as le,a7 as re,J as X,a5 as Z,a$ as ee,aS as x,aQ as ve,t as pe,bs as ye,cm as Rt,cz as ct,aK as xe,aF as Ce,ck as mt,cv as Ft,ae as Ie,D as Ue,cL as tt,av as q,Q as E,bu as pt,bz as Ve,a_ as ft,bE as we,cA as Ke,az as Mt,d as Pe,ct as Yt,cu as vt,N as Ge,cM as qe,y as at,ah as Ht,bn as de,c6 as We,A as me,b1 as gt,ad as bt,b9 as _t,aP as ue,cN as Et,cO as Je,a4 as lt,bo as he,cG as ut,bD as Kt,ay as it,bg as zt,b0 as jt,cP as ot,cB as yt,ag as Gt,cK as dt,P as wt,ci as Wt,cQ as Jt,U as Zt,aR as Xt}from"./index.6def9867.js";import{Q as ea}from"./QPage.a93271a6.js";import{_ as ta}from"./ProductTitle.a71dd329.js";import{_ as aa}from"./ProductImage.56610a4a.js";import{Q as ge,a as kt}from"./QTabPanel.1ba9f4c2.js";import{a as Qe}from"./QSelect.afec6258.js";import{Q as Ae}from"./QTd.e074529e.js";import{Q as Ze}from"./QTr.6621be4b.js";import{Q as Me}from"./QTable.360f641c.js";import{u as Ye}from"./useDateFormats.6ff00f09.js";import{u as ht}from"./subscriptions.981c8ec3.js";import{e as ze}from"./timestampChecker.15a6dc47.js";import{u as la}from"./subscription-types.95a531a1.js";import{u as St}from"./products.9eb61e5f.js";import{F as oa}from"./Filterer.d96bfcf1.js";import{u as na}from"./diagnostics.1267b969.js";import{Q as je}from"./QSkeleton.4d1a7f68.js";import{Q as sa}from"./QImg.7529f41e.js";import{Q as ra}from"./QInnerLoading.a2fe3785.js";import{Q as ua}from"./QField.d0527066.js";import{Q as Xe}from"./QPopupProxy.3607d030.js";import{Q as ia}from"./QForm.f30bae85.js";import{u as da}from"./useValidations.2c9684d2.js";import{_ as ca,a as ma,b as pa,c as fa}from"./KBArticleEditor.8cf3c495.js";import{K as va}from"./knowledgeBase-type.310a4785.js";import{u as ga}from"./product-details.5bd53194.js";import"./use-panel.8093defb.js";import"./QVirtualScroll.379373bc.js";import"./QMarkupTable.f2c9676f.js";import"./QLinearProgress.af39097c.js";import"./use-fullscreen.9a4adf4c.js";import"./QExpansionItem.46d34000.js";import"./YearSelector.5603dca7.js";import"./QUploader.a637749d.js";import"./use-file.bda887f0.js";import"./QEditor.3f7eb643.js";import"./pinch-scroll-zoom.01cb27c7.js";const nt=et("serviceBulletins",()=>{const Q=F([]);return{bulletins:Q,getBulletins:async a=>{try{const{data:f}=await fe.get("/service-bulletins",{params:{serial:a}});Q.value=f}catch(f){_e(f,!1)}}}}),ba=te({__name:"ImportantDocuments",setup(Q){const i=Oe(),{t:a}=ae(),f=Re(),{productContextType:D}=K(f),v=Fe(),{documents:I}=K(v),n=ke(),{hasValidProductRelevantSubscription:T,userDocLang:C}=K(n),w=nt(),{bulletins:N}=K(w),P=C.value,p=$(()=>{var A;return(A=I.value)==null?void 0:A.filter(H=>(H==null?void 0:H.language.toLowerCase())===P.toLowerCase())}),h=$(()=>p.value.filter(A=>{var H,L,c,k,r,s;return((L=(H=A.metadata)==null?void 0:H.docType)==null?void 0:L.active)&&(((k=(c=A.metadata)==null?void 0:c.docType)==null?void 0:k.important)||((s=(r=A.metadata)==null?void 0:r.docType)==null?void 0:s.isRecall))}).filter(A=>{var H,L;return(L=(H=A.metadata)==null?void 0:H.docType)==null?void 0:L.active}).sort((A,H)=>A.createdAt>H.createdAt?-1:A.createdAt<H.createdAt?1:0)),O=$(()=>N.value.filter(A=>A.language.toLowerCase()===P.toLowerCase()).map(A=>A._id)),V=A=>{i.push(`/document/${A}`)};return(A,H)=>(l(),d(ve,{flat:"",bordered:""},{default:t(()=>[e(Se,{class:"bg-primary text-white"},{default:t(()=>[e(Be,null,{default:t(()=>[Y(S(o(a)("importantDocuments.featureName")),1)]),_:1})]),_:1}),o(D)==="product"&&h.value?(l(),d($e,{key:0,bordered:"",separator:"",dense:o(ie)()},{default:t(()=>{var L;return[e(oe,{header:"",class:"text-weight-bold bg-red-3 text-negative"},{default:t(()=>[Y(S(o(a)("documents.actionRequired")),1)]),_:1}),(l(!0),R(ee,null,le(h.value.filter(c=>O.value.includes(c._id)),c=>{var k,r,s,m;return l(),d(re,{key:c._id,disable:!o(T)&&!((r=(k=c==null?void 0:c.metadata)==null?void 0:k.docType)!=null&&r.isRecall)&&!((m=(s=c==null?void 0:c.metadata)==null?void 0:s.docType)!=null&&m.free),clickable:"",onClick:b=>V(c._id)},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>{var b,_;return[(_=(b=c==null?void 0:c.metadata)==null?void 0:b.docType)!=null&&_.isRecall?(l(),d(X,{key:0,color:"red-8",name:"fad fa-exclamation-triangle"})):(l(),d(X,{key:1,color:"orange-8",name:"fad fa-file-invoice"}))]}),_:2},1024),e(Z,null,{default:t(()=>[Y(S(c.title),1)]),_:2},1024)]),_:2},1032,["disable","onClick"])}),128)),h.value.filter(c=>O.value.includes(c._id)).length?x("",!0):(l(),d(re,{key:0},{default:t(()=>[e(Z,null,{default:t(()=>[Y(S(o(a)("documents.noDocuments")),1)]),_:1})]),_:1})),e(oe,{header:"",class:"text-weight-bold bg-green-2 text-positive"},{default:t(()=>[Y(S(o(a)("documents.noActionRequired")),1)]),_:1}),(l(!0),R(ee,null,le(h.value.filter(c=>!O.value.includes(c._id)),c=>{var k,r,s,m;return l(),d(re,{key:c._id,disable:!o(T)&&!((r=(k=c==null?void 0:c.metadata)==null?void 0:k.docType)!=null&&r.isRecall)&&!((m=(s=c==null?void 0:c.metadata)==null?void 0:s.docType)!=null&&m.free),clickable:"",onClick:b=>V(c._id)},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>{var b,_;return[(_=(b=c==null?void 0:c.metadata)==null?void 0:b.docType)!=null&&_.isRecall?(l(),d(X,{key:0,color:"red-8",name:"fad fa-exclamation-triangle"})):(l(),d(X,{key:1,color:"orange-8",name:"fad fa-file-invoice"}))]}),_:2},1024),e(Z,null,{default:t(()=>[Y(S(c.title),1)]),_:2},1024)]),_:2},1032,["disable","onClick"])}),128)),(L=h.value)!=null&&L.length?x("",!0):(l(),d(re,{key:1},{default:t(()=>[e(Z,null,{default:t(()=>[Y(S(o(a)("documents.noDocuments")),1)]),_:1})]),_:1}))]}),_:1},8,["dense"])):(l(),d($e,{key:1,bordered:"",separator:""},{default:t(()=>[e(oe,{header:""},{default:t(()=>[Y(S(o(a)("importantDocuments.serialDisclaimer")),1)]),_:1}),(l(!0),R(ee,null,le(h.value,L=>{var c,k,r,s;return l(),d(re,{key:L._id,disable:!o(T)&&!((k=(c=L==null?void 0:L.metadata)==null?void 0:c.docType)!=null&&k.isRecall)&&!((s=(r=L==null?void 0:L.metadata)==null?void 0:r.docType)!=null&&s.free),clickable:"",onClick:m=>V(L._id)},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>{var m,b;return[(b=(m=L==null?void 0:L.metadata)==null?void 0:m.docType)!=null&&b.isRecall?(l(),d(X,{key:0,color:"red-8",name:"fad fa-exclamation-triangle"})):(l(),d(X,{key:1,color:"orange-8",name:"fad fa-file-invoice"}))]}),_:2},1024),e(Z,null,{default:t(()=>[Y(S(L.title),1)]),_:2},1024)]),_:2},1032,["disable","onClick"])}),128)),h.value.length?x("",!0):(l(),d(re,{key:0},{default:t(()=>[e(Z,null,{default:t(()=>[Y(S(o(a)("documents.noDocuments")),1)]),_:1})]),_:1}))]),_:1}))]),_:1}))}});function Ct(){const Q=ke(),{auth:i,userRequiresSub:a,hasValidProductRelevantSubscription:f,validSubscriptions:D}=K(Q);return{canAccessDocType:I=>{var C,w,N,P;if(I.isRecall||I.free)return!0;if(pe(a)){if(pe(a)&&!pe(f))return!1}else return!0;const n=(C=i.value)==null?void 0:C.user._id;if(!n||!((w=ye.exports.last(pe(D)))!=null&&w.assignedTo.includes(n))&&((N=i.value)==null?void 0:N.organisationType._type)===Rt.IO)return!1;const T=(P=ye.exports.last(pe(D)))==null?void 0:P.type.restrictions.docTypes;return!T||!T.length?!0:T.includes(I._id)}}}const _a={class:"q-mx-sm"},ya={key:0},wa={key:1},ka=te({__name:"DocumentsTable",props:{tab:{},productRedirectUrl:{},productId:{}},setup(Q){const i=$(ie),{t:a}=ae(),{formatLang:f}=ct(),{fromMongoFormat:D}=Ye(),v=Fe(),I=Oe(),n=xe(),T=Q,C=Ce("auth"),{documents:w,documentsInDownloadQueue:N,offlineDocuments:P}=K(v),p=ke(),{userIsOrgAdmin:h,userDocLang:O,isNetworkConnected:V,validSubscriptions:A}=K(p),H=ht(),{requestAccessToOrgSubscription:L}=H,{languages:c}=K(mt()),k=pe(O),r=F(!1),s=F(!1),m=[{name:"title",field:"title",label:a("documents.title"),align:"left",sortable:!0},{name:"type",field:u=>u.metadata.docType,label:a("documents.docType"),align:"left",sortable:!0,format:u=>u.title&&u.title[k]?u.title[k]:u.systemTitle},{name:"language",field:"language",label:a("documents.language"),align:"left",sortable:!0,format:u=>f(u)},{name:"version",field:"version",label:a("documents.version"),align:"left",sortable:!0},{name:"createdAt",field:u=>u.metadata.validFrom||u.createdAt,format:u=>D(u),label:a("documents.date"),align:"left",sortable:!0}],b=$(()=>[{name:"actions",classes:""},...m,{name:"lastSyncedAt",field:"lastSyncedAt",format:u=>u?new Date(u).toLocaleDateString():a("never"),label:a("documents.lastSyncedAt"),align:"left",sortable:!0}]),_=$(()=>[...m,{name:"actions"}]),U=$(()=>{var u;return(u=C==null?void 0:C.value)==null?void 0:u.organisationType}),g=$(()=>T.tab.docTypes),W=$(()=>r.value?w.value.filter(u=>c.value.map(B=>B.toLowerCase()).includes(u.language.toLowerCase())).filter(u=>{var B;return!((B=u.metadata.docType)!=null&&B.isDiagnostics)}):w.value.filter(u=>u.language.toLowerCase()===k.toLowerCase()).filter(u=>{var B;return!((B=u.metadata.docType)!=null&&B.isDiagnostics)})),ce=u=>!u.row.isDownloaded&&!V.value,J=u=>{const B=N.value.find(G=>G.id===u._id),y=P.value.find(G=>G._id===u._id),M=()=>{};return{...u,lastSyncedAt:y==null?void 0:y.lastSyncedAt,inProgress:B==null?void 0:B.inProgress,isDownloaded:!!y,cancelRequest:(B==null?void 0:B.cancelRequest)||M}},be=$(()=>{var M;const u=W.value.filter(z=>z.metadata.docType&&g.value.map(G=>G._id).includes(z.metadata.docType._id)),B=z=>z.sort((G,Ne)=>{const Qt=g.value.findIndex(Ee=>{var De;return Ee._id===((De=G.metadata.docType)==null?void 0:De._id)}),Ot=g.value.findIndex(Ee=>{var De;return Ee._id===((De=Ne.metadata.docType)==null?void 0:De._id)});return Qt>Ot?1:-1});let y=[];return((M=U==null?void 0:U.value)==null?void 0:M._type)==="manufacturer"?y=u.filter(z=>{var G;return(G=z.metadata.docType)==null?void 0:G.active}):y=u.filter(z=>{var G,Ne;return(G=z.metadata.userGroup)!=null&&G.length?((Ne=z.metadata.docType)==null?void 0:Ne.active)&&U.value&&z.metadata.userGroup.includes(U.value._id):!0}),B(y).map(J)}),{canAccessDocType:ne}=Ct(),se=(u,B,y,M)=>{if(!B.metadata.docType||!ne(B.metadata.docType))return;if(!i.value)return I.push(`/document/${B._id}`);let z=!1;if(B.lastSyncedAt&&(z=ze(Date.parse(B.lastSyncedAt)).expiryPercentage>=100),!V&&z){we({type:"negative",message:a("errors.documentExpired")});return}I.push(`/document/${B._id}?offline=${!V.value||M}`)},Le=()=>{s.value=!0,L()},j=la(),{subscriptionTypes:st}=K(j),{getAllSubscriptionTypes:Tt}=j,Vt=$(()=>A.value.filter(u=>u.state===Ke.Active||u.state===Ke.PastDue||u.state===Ke.Canceled)),rt=$(()=>Vt.value.map(u=>{var y;const B=((y=st.value.find(M=>M._id===(u==null?void 0:u.type._id)))==null?void 0:y.serial)||0;if(st.value.filter(M=>M.active).filter(M=>M.recurring).filter(M=>M._id!==(u==null?void 0:u.type._id)).filter(M=>{var z;return(z=M.serial)!=null?z:0>B}).length)return u._id}).flat()),Pt=$(()=>rt.value.length>=1),$t=St(),{product:At}=K($t),He=$(()=>{var u;return Pt.value?{subId:rt.value[0],serial:(u=At.value)==null?void 0:u.serialNumber,redirectUrl:n.fullPath}:null}),Bt=$(()=>h.value?He.value?a("buttons.upgrade"):a("buttons.purchaseSub"):a("buttons.requestSub")),xt=u=>{if(h.value)if(He.value){const{subId:B,serial:y,redirectUrl:M}=He.value;I.push({path:"/profile",query:{showUpgrade:"true",subId:B,upgradeSerial:y,redirectUrl:M}})}else I.push(`/payments?redirectDoc=/products/${n.path.includes("search")?"search/":""}${u}`);else Le()},It=u=>u.inProgress?"fal fa-times":u.isDownloaded?"fal fa-sync":"fal fa-arrow-to-bottom",Lt=u=>{if(u.inProgress&&u.cancelRequest){u.cancelRequest();return}return Ut(u._id,u.title,u.isDownloaded)},Nt=Ft(),Ut=async(u,B,y)=>await v.addDocToDownloadQueue(u,B,T.productId,y),qt=async u=>{Mt({title:a("documents.delete.singular.title"),message:a("documents.delete.singular.message"),submit:a("buttons.delete"),cancel:a("buttons.cancel")}).onOk(async()=>{Pe(!0);try{await Nt.deleteOfflineDocumentDataById(u),Pe(!1),we("positive")}catch{Pe(!1),we("negative")}})};return Ie(async()=>{await Tt()}),(u,B)=>(l(),d(Me,{rows:be.value,columns:i.value?b.value:_.value,"row-key":"_id",flat:""},{bottom:t(y=>[e(Ue,{modelValue:r.value,"onUpdate:modelValue":B[0]||(B[0]=M=>r.value=M),label:o(a)("documents.showAllLanguages"),color:"green"},null,8,["modelValue","label"]),e(tt),Y(" "+S(u.$q.lang.table.recordsPerPage)+" ",1),e(Qe,{modelValue:y.pagination.rowsPerPage,"onUpdate:modelValue":M=>y.pagination.rowsPerPage=M,options:[5,10,20,50],dense:"",outlined:!1,borderless:"","options-dense":"",class:"q-mx-md"},null,8,["modelValue","onUpdate:modelValue"]),q("span",_a,S(u.$q.lang.table.pagination(y.isFirstPage?1:y.pagination.page*y.pagination.rowsPerPage-y.pagination.rowsPerPage+1,y.isLastPage?be.value.length:y.pagination.page*y.pagination.rowsPerPage,be.value.length)),1),y.pagesNumber>2?(l(),d(E,{key:0,icon:"first_page",color:"grey-8",round:"",dense:"",flat:"",disable:y.isFirstPage,onClick:y.firstPage},null,8,["disable","onClick"])):x("",!0),y.pagesNumber>1?(l(),d(E,{key:1,icon:"chevron_left",color:"grey-8",round:"",dense:"",flat:"",disable:y.isFirstPage,onClick:y.prevPage},null,8,["disable","onClick"])):x("",!0),y.pagesNumber>1?(l(),d(E,{key:2,icon:"chevron_right",color:"grey-8",round:"",dense:"",flat:"",disable:y.isLastPage,onClick:y.nextPage},null,8,["disable","onClick"])):x("",!0),y.pagesNumber>2?(l(),d(E,{key:3,icon:"last_page",color:"grey-8",round:"",dense:"",flat:"",disable:y.isLastPage,onClick:y.lastPage},null,8,["disable","onClick"])):x("",!0)]),"no-data":t(({message:y,icon:M})=>[q("div",null,[e(X,{size:"2em",name:M},null,8,["name"]),Y(" "+S(y),1)]),q("div",null,[e(Ue,{modelValue:r.value,"onUpdate:modelValue":B[1]||(B[1]=z=>r.value=z),label:o(a)("documents.showAllLanguages"),color:"green"},null,8,["modelValue","label"])])]),body:t(y=>[e(Ze,{props:y,"no-hover":ce(y),class:ft(["relative-position cursor-pointer",{"light-dimmed":ce(y)}]),onClick:()=>!ce(y)&&se(null,y.row)},{default:t(()=>[(l(!0),R(ee,null,le(y.cols,M=>(l(),d(Ae,{key:M.name,props:y,"auto-width":M.name==="actions"},{default:t(()=>{var z;return[M.name!=="actions"?(l(),R("div",ya,[Y(S(M.value)+" ",1),i.value&&o(ze)(M.lastSyncedAt).isWarning?(l(),d(pt,{key:0,color:"red",floating:""},{default:t(()=>[Y(S(o(ze)(M.lastSyncedAt).message),1)]),_:2},1024)):x("",!0)])):x("",!0),M.name==="actions"?(l(),R("div",wa,[o(ne)(y.row.metadata.docType)?x("",!0):(l(),d(E,{key:0,label:Bt.value,disable:s.value||!((z=o(C))!=null&&z.user.emailVerified),color:"primary",unelevated:"",onClick:B[2]||(B[2]=G=>xt(u.productRedirectUrl))},null,8,["label","disable"])),i.value?(l(),R("div",{key:1,onClick:B[3]||(B[3]=G=>G.stopPropagation())},[e(E,{dense:"",round:"",unelevated:"",color:"primary",icon:"fal fa-book-open",disable:!y.row.isDownloaded,class:"on-left",onClick:Ve(G=>se(null,y.row,null,!0),["stop"])},null,8,["disable","onClick"]),e(E,{dense:"",color:"primary",round:"",unelevated:"",disable:!o(V),icon:It(y.row),onClick:Ve(G=>Lt(y.row),["stop"])},null,8,["disable","icon","onClick"]),e(E,{dense:"",class:"on-right",color:"negative",icon:"fal fa-trash",round:"",unelevated:"",disable:!y.row.isDownloaded,onClick:Ve(G=>qt(y.row._id),["stop"])},null,8,["disable","onClick"])])):x("",!0)])):x("",!0)]}),_:2},1032,["props","auto-width"]))),128))]),_:2},1032,["props","no-hover","class","onClick"])]),_:1},8,["rows","columns"]))}}),ha=te({__name:"DocumentsTabPanel",props:{name:{},productId:{}},setup(Q){const i=Yt(),{documentTypes:a}=K(i),f=vt(),{documentTabs:D}=K(f),v=ae(),{t:I}=v,n=F(),T=F([]),C=F([]),w=v.locale.value,N=()=>{C.value=ye.exports.sortBy(ye.exports.cloneDeep(D.value),"sort");const P=C.value.map(p=>p.docTypes).flat().map(p=>p._id);T.value=ye.exports.cloneDeep(a.value).filter(p=>!P.includes(p._id))};return Ge(()=>D.value,()=>{N(),n.value=C.value[0]._id}),(P,p)=>(l(),d(ge,{name:P.name,class:"q-pa-none"},{default:t(()=>[e(at,{modelValue:n.value,"onUpdate:modelValue":p[0]||(p[0]=h=>n.value=h),stretch:"","mobile-arrows":"",class:"bg-secondary text-white",align:"left","indicator-color":"accent","active-bg-color":"accent",dense:o(ie)()},{default:t(()=>[(l(!0),R(ee,null,le(C.value,h=>(l(),d(qe,{key:h._id,label:h.title[o(w)],name:h._id},null,8,["label","name"]))),128)),e(qe,{label:o(I)("products.tabPanels.documents.misc"),name:"misc"},null,8,["label"])]),_:1},8,["modelValue","dense"]),e(ka,{tab:o(D).find(h=>h._id===n.value)||{docTypes:T.value},"product-redirect-url":`${P.productId}`,"product-id":P.productId},null,8,["tab","product-redirect-url","product-id"])]),_:1},8,["name"]))}}),Sa={class:"text-h6"},Ca=te({__name:"PartsTabPanel",props:{name:{}},setup(Q){const{t:i}=ae();return(a,f)=>(l(),d(ge,{name:a.name},{default:t(()=>[q("div",Sa,S(o(i)("epc.featureName")),1),Y(" "+S(o(i)("epc.body")),1)]),_:1},8,["name"]))}}),Da={class:"text-h6"},Ta=te({__name:"MotTabPanel",props:{name:{}},setup(Q){const{t:i}=ae();return(a,f)=>(l(),d(ge,{name:a.name},{default:t(()=>[q("div",Da,S(o(i)("mot.featureName")),1),Y(" "+S(o(i)("mot.body")),1)]),_:1},8,["name"]))}}),Va={class:"q-mx-sm"},Pa=te({__name:"DiagnosticsDocsTable",props:{productRedirectUrl:{}},setup(Q){const i=Fe(),{t:a}=ae(),{formatLang:f}=ct(),{fromMongoFormat:D}=Ye(),v=Oe(),I=xe(),n=Ce("auth"),{documents:T}=K(i),C=ke(),{userIsOrgAdmin:w,userDocLang:N}=K(C),P=ht(),{requestAccessToOrgSubscription:p}=P,{languages:h}=K(mt()),{canAccessDocType:O}=Ct(),V=F(!1),A=F(!1),H=pe(N),L=$(()=>[{name:"title",field:"title",label:a("documents.title"),align:"left",sortable:!0},{name:"type",field:_=>_.metadata.docType,label:a("documents.docType"),align:"left",sortable:!0,format:_=>_.title&&_.title[H]?_.title[H]:_.systemTitle},{name:"language",field:"language",label:a("documents.language"),align:"left",sortable:!0,format:_=>f(_)},{name:"version",field:"version",label:a("documents.version"),align:"left",sortable:!0},{name:"createdAt",field:"createdAt",format:_=>D(_),label:a("documents.date"),align:"left",sortable:!0},{name:"actions"}]),c=$(()=>n==null?void 0:n.value.organisationType),k=$(()=>V.value?T.value.filter(_=>h.value.map(U=>U.toLowerCase()).includes(_.language.toLowerCase())).filter(_=>{var U,g;return!!((g=(U=_==null?void 0:_.metadata)==null?void 0:U.docType)!=null&&g.isDiagnostics)}):T.value.filter(_=>_.language.toLowerCase()===H.toLowerCase()).filter(_=>{var U;return!!((U=_.metadata.docType)!=null&&U.isDiagnostics)})),r=$(()=>{var _;return((_=c==null?void 0:c.value)==null?void 0:_._type)==="manufacturer"?k.value.filter(U=>{var g;return(g=U.metadata.docType)==null?void 0:g.active}):k.value.filter(U=>{var g,W;return(g=U.metadata.userGroup)!=null&&g.length?((W=U.metadata.docType)==null?void 0:W.active)&&c.value&&U.metadata.userGroup.includes(c.value._id):!0})}),s=(_,U)=>{U.metadata.docType&&O(U.metadata.docType)&&v.push(`/document/${U._id}`)},m=()=>{A.value=!0,p()},b=_=>{w.value?v.push(`/payments?redirectDoc=/products/${I.path.includes("search")?"search/":""}${_}`):m()};return(_,U)=>(l(),d(Me,{rows:r.value,columns:L.value,"row-key":"_id",flat:"",onRowClick:s},{bottom:t(g=>[e(Ue,{modelValue:V.value,"onUpdate:modelValue":U[0]||(U[0]=W=>V.value=W),label:o(a)("documents.showAllLanguages"),color:"green"},null,8,["modelValue","label"]),e(tt),Y(" "+S(_.$q.lang.table.recordsPerPage)+" ",1),e(Qe,{modelValue:g.pagination.rowsPerPage,"onUpdate:modelValue":W=>g.pagination.rowsPerPage=W,options:[5,10,20,50],dense:"",outlined:!1,borderless:"","options-dense":"",class:"q-mx-md"},null,8,["modelValue","onUpdate:modelValue"]),q("span",Va,S(_.$q.lang.table.pagination(g.isFirstPage?1:g.pagination.page*g.pagination.rowsPerPage-g.pagination.rowsPerPage+1,g.isLastPage?r.value.length:g.pagination.page*g.pagination.rowsPerPage,r.value.length)),1),g.pagesNumber>2?(l(),d(E,{key:0,icon:"first_page",color:"grey-8",round:"",dense:"",flat:"",disable:g.isFirstPage,onClick:g.firstPage},null,8,["disable","onClick"])):x("",!0),g.pagesNumber>1?(l(),d(E,{key:1,icon:"chevron_left",color:"grey-8",round:"",dense:"",flat:"",disable:g.isFirstPage,onClick:g.prevPage},null,8,["disable","onClick"])):x("",!0),g.pagesNumber>1?(l(),d(E,{key:2,icon:"chevron_right",color:"grey-8",round:"",dense:"",flat:"",disable:g.isLastPage,onClick:g.nextPage},null,8,["disable","onClick"])):x("",!0),g.pagesNumber>2?(l(),d(E,{key:3,icon:"last_page",color:"grey-8",round:"",dense:"",flat:"",disable:g.isLastPage,onClick:g.lastPage},null,8,["disable","onClick"])):x("",!0)]),"no-data":t(({message:g,icon:W})=>[q("div",null,[e(X,{size:"2em",name:W},null,8,["name"]),Y(" "+S(g),1)]),q("div",null,[e(Ue,{modelValue:V.value,"onUpdate:modelValue":U[1]||(U[1]=ce=>V.value=ce),label:o(a)("documents.showAllLanguages"),color:"green"},null,8,["modelValue","label"])])]),"body-cell-actions":t(g=>[e(Ae,{props:g},{default:t(()=>{var W;return[o(O)(g.row.metadata.docType)?x("",!0):(l(),d(E,{key:0,label:o(w)?o(a)("buttons.purchaseSub"):o(a)("buttons.requestSub"),disable:A.value||!((W=o(n))!=null&&W.user.emailVerified),color:"primary",unelevated:"",onClick:U[2]||(U[2]=ce=>b(_.productRedirectUrl))},null,8,["label","disable"]))]}),_:2},1032,["props"])]),_:1},8,["rows","columns"]))}}),$a={key:0,class:"text-center"},Aa=te({__name:"TableSelectMultiple",props:{data:{},columns:{},title:{default:void 0},modelValue:{default:()=>[]},multiple:{type:Boolean,default:!0},showToolbar:{type:Boolean,default:!0},loadFilter:{type:Boolean,default:!0},showDownloadBtn:{type:Boolean,default:!1}},emits:["input","addNew","rowClick","actionClick","delete"],setup(Q,{emit:i}){const{t:a}=ae(),f=Q,D=i,v=F(!0),I=F({}),n=F({rowsPerPage:15}),T=F([]),C=gt();Ge(()=>f.modelValue,h=>T.value=h,{immediate:!0}),Ge(()=>T.value,h=>D("input",h),{immediate:!0}),Ie(()=>{const h={};f.columns.forEach(O=>h[O.name]=""),I.value=h});const w=(h,O,V,A)=>new oa(h,O,V,A).filterOnColumns(),N=()=>{D("addNew")},P=(h,O,V)=>{D("rowClick",h,O,V)},p=h=>{D("delete",h)};return(h,O)=>(l(),R("div",null,[h.showToolbar?(l(),d(Se,{key:0,class:"bg-primary text-white"},{default:t(()=>[e(Be,null,{default:t(()=>[Y(S(h.title),1)]),_:1}),e(Ht,{appear:"","enter-active-class":"animated fadeIn","leave-active-class":"animated fadeOut"},{default:t(()=>[T.value.length?(l(),d(E,{key:0,label:o(a)("buttons.delete"),icon:"delete",flat:"",onClick:O[0]||(O[0]=V=>p(T.value))},null,8,["label"])):x("",!0)]),_:1}),e(E,{label:o(a)("buttons.new"),icon:"add",flat:"",onClick:N},null,8,["label"]),e(E,{icon:"fal fa-filter",flat:"",onClick:O[1]||(O[1]=V=>v.value=!v.value)})]),_:1})):x("",!0),e(Me,{selected:T.value,"onUpdate:selected":O[2]||(O[2]=V=>T.value=V),pagination:n.value,"onUpdate:pagination":O[3]||(O[3]=V=>n.value=V),filter:I.value,"filter-method":w,rows:h.data,columns:h.columns,dense:h.$q.screen.lt.md,selection:h.multiple?"multiple":"none","row-key":"_id",onRowClick:P},{"top-row":t(V=>[de(q("tr",null,[h.multiple?(l(),R("td",$a,[e(X,{name:"fad fa-filter",size:"sm"})])):x("",!0),(l(!0),R(ee,null,le(V.cols,A=>(l(),R("td",{key:A.name},[e(me,{modelValue:I.value[A.name],"onUpdate:modelValue":H=>I.value[A.name]=H,label:A.label,type:"text",dense:""},null,8,["modelValue","onUpdate:modelValue","label"])]))),128))],512),[[We,v.value&&h.loadFilter]])]),"body-cell-actions":t(V=>[/*h.showDownloadBtn*/true?(l(),d(Ae,{key:0,props:V},{default:t(()=>[e(E,{label:o(a)("buttons.download"),href:`${o(C)}/diagnostics/file/${V.row._id}`,download:"",type:"a",color:"primary",unelevated:""},null,8,["label","href"])]),_:2},1032,["props"])):x("",!0)]),_:1},8,["selected","pagination","filter","rows","columns","dense","selection"])]))}}),Ba=te({__name:"TableUserDiagnostics",setup(Q){const{t:i}=ae(),{fromMongoFormat:a}=Ye(),{getAllPublished:f}=na(),D=F([]),v=$(()=>[{field:"name",name:"name",label:i("diagnostics.name"),align:"left",sortable:!0},{field:"updatedAt",name:"updatedAt",label:i("diagnostics.publishedOn"),align:"left",sortable:!0,format:n=>n?a(n):"-"},{name:"actions",label:i("diagnostics.download")}]),I=async()=>{const n=await f();return D.value=n,D};return Ie(()=>{I()}),(n,T)=>(l(),d(Aa,{data:D.value,columns:v.value,multiple:!1,"show-toolbar":!1,"load-filter":!1,"show-download-btn":!0},null,8,["data","columns"]))}}),xa=te({__name:"DiagnosticsTabPanel",props:{name:{}},setup(Q){const i=xe(),a=ae(),{t:f}=a,D=F(),v=$(()=>[{title:f("diagnostics.docTabLabel")},{title:f("diagnostics.softwareTabLabel")}]);return Ie(()=>D.value=v.value[0].title),(I,n)=>(l(),d(ge,{name:I.name,class:"q-pa-none"},{default:t(()=>[e(at,{modelValue:D.value,"onUpdate:modelValue":n[0]||(n[0]=T=>D.value=T),class:"bg-secondary text-white",align:"left","indicator-color":"accent","active-bg-color":"accent",stretch:"","mobile-arrows":"",dense:o(ie)()},{default:t(()=>[(l(!0),R(ee,null,le(v.value,(T,C)=>(l(),d(qe,{key:C,label:T.title,name:T.title},null,8,["label","name"]))),128))]),_:1},8,["modelValue","dense"]),e(kt,{modelValue:D.value,"onUpdate:modelValue":n[1]||(n[1]=T=>D.value=T),animated:"","transition-prev":"fade","transition-next":"fade"},{default:t(()=>[e(ge,{name:v.value[0].title,class:"q-pa-none"},{default:t(()=>[e(Pa,{"product-redirect-url":`${o(i).params.id}`},null,8,["product-redirect-url"])]),_:1},8,["name"]),e(ge,{name:v.value[1].title,class:"q-pa-none"},{default:t(()=>[e(Ba)]),_:1},8,["name"])]),_:1},8,["modelValue"])]),_:1},8,["name"]))}}),Dt=et("tol",()=>{const Q=Re(),{t:i}=ae(),a=F(null),f=async C=>{try{const{data:w}=await fe.get(`/tol/service-history/${C}`);return a.value=w,!0}catch(w){_e(w,!0,i("errors.cantAccessServiceHistory"))}},D=async C=>{try{return await fe.post("/tol/service",C),we("positive"),Q.productContext&&await f(Q.productContext.serialNumber),!0}catch(w){return _e(w,!0,i("errors.cantAddService")),!1}},v=F([]),I=async C=>{try{const{data:w}=await fe.get(`/tol/service-items/${C}`);v.value=w}catch(w){_e(w,!0,i("errors.serviceItemsFailed"))}},n=F([]);return{tolProductData:a,getServiceHistory:f,addToServiceHistory:D,serviceItems:v,getServiceItems:I,countries:n,getCountries:async()=>{try{const{data:C}=await fe.get("/tol/countries");n.value=C}catch(C){_e(C,!0,i("errors.countriesFailed"))}}}}),Ia={class:"text-body2"},La={key:0},Na={key:1},Ua={key:2},qa={class:"row q-col-gutter-x-sm items-center"},Qa={class:"col"},Oa={class:"col"},Ra={class:"row q-col-gutter-x-sm"},Fa={class:"col"},Ma={class:"col"},Ya={class:"row items-center justify-end"},Ha={class:"row items-center justify-end"},Ea={class:"text-right"},Ka=te({__name:"AddServiceDialog",props:{show:{type:Boolean},product:{},currentOdo:{}},emits:["hide"],setup(Q,{emit:i}){const{t:a}=ae(),{isRequired:f,isNumber:D}=da(),v=Q,I=i,n=bt({mileage:v.currentOdo,odoUnits:1,serviceItemId:1,serviceDate:"",nextServiceDate:"",dealer:{name:"",location:"",countryId:""},additionalInformation:""}),T=F(!1),C=Dt(),{serviceItems:w,countries:N}=K(C),{addToServiceHistory:P}=C,p=Ce("auth"),h=$(()=>[{label:a("units.mile.plural"),value:1},{label:a("units.kilometer.plural"),value:2}]),O=k=>ut.formatDate(new Date(ut.extractDate(k,"DD/MM/YYYY")),"YYYY-MM-DDTHH:mm:ss.SSSSSSSZ"),V=$(()=>w.value.map(k=>({label:k.name,value:k.id}))),A=$(()=>N.value.map(k=>({label:k.name,value:k.id}))),H=$(()=>({...n,vin:v.product.serialNumberStub,serviceDate:O(n.serviceDate),nextServiceDate:O(n.nextServiceDate)})),L=async()=>{var k;if(!((k=p==null?void 0:p.value)!=null&&k.organisationType.canAddService))return we("negative");T.value=!0,await P(pe(H)),I("hide"),c(),T.value=!1},c=()=>{Object.assign(n,{mileage:"",odoUnits:1,serviceItemId:"",serviceDate:"",nextServiceDate:"",dealer:{name:"",location:"",countryId:""}})};return(k,r)=>(l(),d(lt,{"model-value":k.show,persistent:"",onHide:r[11]||(r[11]=s=>k.$emit("hide"))},{default:t(()=>[e(ve,{style:{width:"800px"}},{default:t(()=>[e(Se,{class:"bg-primary text-white"},{default:t(()=>[e(Be,{shrink:""},{default:t(()=>[Y(S(o(a)("products.tabPanels.service.addService")),1)]),_:1}),e(_t,{vertical:"",inset:"",dark:"",class:"q-mr-sm"}),q("span",Ia,[k.product.modelName?(l(),R("span",La,S(k.product.modelName),1)):x("",!0),k.product.modelYear?(l(),R("span",Na," - "+S(k.product.modelYear),1)):x("",!0),k.product.serialNumber?(l(),R("span",Ua," - "+S(k.product.serialNumber),1)):x("",!0)]),e(tt),de(e(E,{flat:"",round:"",dense:"",icon:"close"},null,512),[[he]])]),_:1}),e(ue,null,{default:t(()=>[e(ia,{class:"q-gutter-y-md",onSubmit:L,onReset:c},{default:t(()=>[q("div",qa,[q("div",Qa,[e(me,{modelValue:n.mileage,"onUpdate:modelValue":r[0]||(r[0]=s=>n.mileage=s),modelModifiers:{number:!0},rules:[o(f),o(D),s=>s>=k.currentOdo||o(a)("products.tabPanels.service.odoError",[k.currentOdo])],label:o(a)("products.tabPanels.service.odometer"),placeholder:`${k.currentOdo}`,"type.sync":"number",min:"0"},null,8,["modelValue","rules","label","placeholder"])]),q("div",Oa,[e(ua,{rules:[o(f)],"model-value":n.odoUnits,borderless:""},{control:t(()=>[e(Et,{modelValue:n.odoUnits,"onUpdate:modelValue":r[1]||(r[1]=s=>n.odoUnits=s),options:h.value,color:"accent",inline:"",class:"text-capitalize"},null,8,["modelValue","options"])]),_:1},8,["rules","model-value"])])]),e(Qe,{modelValue:n.serviceItemId,"onUpdate:modelValue":r[2]||(r[2]=s=>n.serviceItemId=s),rules:[o(f)],options:V.value,label:o(a)("products.tabPanels.service.serviceType"),"map-options":"","emit-value":""},null,8,["modelValue","rules","options","label"]),e(me,{modelValue:n.dealer.name,"onUpdate:modelValue":r[3]||(r[3]=s=>n.dealer.name=s),rules:[o(f)],label:o(a)("products.tabPanels.service.servicedBy"),type:"text"},null,8,["modelValue","rules","label"]),q("div",Ra,[q("div",Fa,[e(me,{modelValue:n.dealer.location,"onUpdate:modelValue":r[4]||(r[4]=s=>n.dealer.location=s),rules:[o(f)],label:o(a)("products.tabPanels.service.servicelocation"),type:"text"},null,8,["modelValue","rules","label"])]),q("div",Ma,[e(Qe,{modelValue:n.dealer.countryId,"onUpdate:modelValue":r[5]||(r[5]=s=>n.dealer.countryId=s),rules:[o(f)],options:A.value,label:o(a)("products.tabPanels.service.country"),"map-options":"","emit-value":""},null,8,["modelValue","rules","options","label"])])]),e(me,{modelValue:n.serviceDate,"onUpdate:modelValue":r[7]||(r[7]=s=>n.serviceDate=s),rules:[o(f)],label:o(a)("products.tabPanels.service.serviceDate"),mask:"##/##/####"},{append:t(()=>[e(X,{name:"event",class:"cursor-pointer"},{default:t(()=>[e(Xe,{ref:"qDateProxy","transition-show":"scale","transition-hide":"scale"},{default:t(()=>[e(Je,{modelValue:n.serviceDate,"onUpdate:modelValue":r[6]||(r[6]=s=>n.serviceDate=s),mask:"DD/MM/YYYY","today-btn":""},{default:t(()=>[q("div",Ya,[de(e(E,{label:o(a)("buttons.close"),color:"primary"},null,8,["label"]),[[he]])])]),_:1},8,["modelValue"])]),_:1},512)]),_:1})]),_:1},8,["modelValue","rules","label"]),e(me,{modelValue:n.nextServiceDate,"onUpdate:modelValue":r[9]||(r[9]=s=>n.nextServiceDate=s),rules:[o(f)],label:o(a)("products.tabPanels.service.nextServiceDate"),mask:"##/##/####"},{append:t(()=>[e(X,{name:"event",class:"cursor-pointer"},{default:t(()=>[e(Xe,{ref:"qDateProxy","transition-show":"scale","transition-hide":"scale"},{default:t(()=>[e(Je,{modelValue:n.nextServiceDate,"onUpdate:modelValue":r[8]||(r[8]=s=>n.nextServiceDate=s),mask:"DD/MM/YYYY","today-btn":""},{default:t(()=>[q("div",Ha,[de(e(E,{label:o(a)("buttons.close"),color:"primary"},null,8,["label"]),[[he]])])]),_:1},8,["modelValue"])]),_:1},512)]),_:1})]),_:1},8,["modelValue","rules","label"]),e(me,{modelValue:n.additionalInformation,"onUpdate:modelValue":r[10]||(r[10]=s=>n.additionalInformation=s),label:o(a)("products.tabPanels.service.additionalInformation"),"bottom-slots":"",type:"textarea",autogrow:""},null,8,["modelValue","label"]),q("div",Ea,[de(e(E,{label:o(a)("buttons.cancel"),type:"reset",color:"primary",flat:"",class:"q-ml-sm"},null,8,["label"]),[[he]]),e(E,{label:o(a)("buttons.submit"),loading:T.value,type:"submit",color:"primary"},null,8,["label","loading"])])]),_:1})]),_:1})]),_:1})]),_:1},8,["model-value"]))}}),za={key:1},ja={key:2},Ga=te({__name:"ServiceTabPanel",props:{name:{}},setup(Q){const{t:i}=ae(),a=F(!1),f=F(!0),D=F(!1),v=Ce("auth"),I=ke(),{validSubscriptions:n,hasValidProductRelevantSubscription:T}=K(I),C=Re(),{productContext:w}=K(C),N=Dt(),{tolProductData:P}=K(N),{getServiceHistory:p,getServiceItems:h,getCountries:O}=N,V=$(()=>!!w.value&&P.value?ye.exports.orderBy(P.value.completedServices,["serviceDate","odometer"],["desc","desc"]):[]),A=$(()=>V.value.reduce((c,k)=>c=c>k.odometer?c:k.odometer,0)),H=$(()=>{var r,s,m,b;if(!((r=v==null?void 0:v.value)!=null&&r.organisationType.canAddService))return!1;const c=[(s=w.value)==null?void 0:s.serialNumber,(m=w.value)==null?void 0:m.serialNumberStub].filter(Boolean);if(v.value.organisationType._type==="individual"){const _=T.value&&((b=n.value)==null?void 0:b.length)&&n.value[0].restrictions.serial.map(U=>U.serial);return Array.isArray(_)&&ye.exports.intersection(_,c).length}return!0}),L=$(()=>({1:it("authoriseddealer.png"),2:"fad fa-motorcycle",3:"fad fa-user-cog",4:it("authoriseddealer.png")}));return Ie(()=>{!w.value||(p(w.value.serialNumber).then(c=>{c&&(D.value=!0),f.value=!1}),O(),h(w.value.serialNumberStub))}),(c,k)=>(l(),d(ge,{name:c.name},{default:t(()=>{var r;return[f.value?(l(),R(ee,{key:0},le(3,s=>e(re,{key:s,style:{"max-width":"300px"}},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>[e(je,{type:"QAvatar"})]),_:1}),e(Z,null,{default:t(()=>[e(oe,null,{default:t(()=>[e(je,{type:"text"})]),_:1}),e(oe,{caption:""},{default:t(()=>[e(je,{type:"text",width:"65%"})]),_:1})]),_:1})]),_:2},1024)),64)):x("",!0),!V.value.length&&!D.value&&!f.value?(l(),R("p",za,S(o(i)("errors.cantAccessServiceHistory")),1)):x("",!0),!V.value.length&&D.value?(l(),R("p",ja,S(o(i)("products.tabPanels.service.noServices")),1)):x("",!0),e($e,{separator:""},{default:t(()=>[H.value&&D.value?(l(),d(E,{key:0,label:o(i)("products.tabPanels.service.addService"),color:"primary",onClick:k[0]||(k[0]=s=>a.value=!0)},null,8,["label"])):x("",!0),(l(!0),R(ee,null,le(V.value,(s,m)=>(l(),d(re,{key:m},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>[[1,4].includes(s.serviceProviderType)?(l(),d(sa,{key:0,src:L.value[s.serviceProviderType]},null,8,["src"])):(l(),d(X,{key:1,name:L.value[s.serviceProviderType],size:"2.3em"},null,8,["name"]))]),_:2},1024),e(Z,null,{default:t(()=>[e(oe,null,{default:t(()=>[Y(S(s.serviceEvent)+" ("+S(s.odometer.toLocaleString())+S(s.unitOfDistance===1?o(i)("units.meter.short"):o(i)("units.kilometer.short"))+") ",1)]),_:2},1024),e(oe,{caption:""},{default:t(()=>[Y(S(new Date(s.serviceDate).toLocaleDateString())+" - "+S(s.dealershipName)+", "+S(s.dealershipLocation),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1}),((r=o(v))==null?void 0:r.organisationType.canAddService)&&o(w)?(l(),d(Ka,{key:3,show:a.value,product:o(w),"current-odo":A.value,onHide:k[1]||(k[1]=s=>a.value=!1)},null,8,["show","product","current-odo"])):x("",!0),e(ra,{showing:f.value},{default:t(()=>[e(Kt,{size:"50px",color:"primary"})]),_:1},8,["showing"])]}),_:1},8,["name"]))}}),Wa=["innerHTML"],Te=te({__name:"KBListItem",props:{label:{},value:{}},setup(Q){return(i,a)=>(l(),d(re,null,{default:t(()=>[e(Z,null,{default:t(()=>[e(oe,null,{default:t(()=>[Y(S(i.label),1)]),_:1}),e(oe,{caption:""},{default:t(()=>[q("div",{innerHTML:i.value},null,8,Wa)]),_:1})]),_:1})]),_:1}))}}),Ja={};function Za(Q,i){return l(),d(jt,{class:"bg-info text-white q-mb-md"},{default:t(()=>[q("strong",null,S(Q.$t("knowledgeBase.deprecationNotice.heading")),1),Y(S(Q.$t("knowledgeBase.deprecationNotice.body")),1)]),_:1})}var Xa=zt(Ja,[["render",Za]]);const el={class:"bg-secondary"},tl={key:0,class:"fit text-center"},al={key:0},ll={class:"text-h6 text-bold"},ol={class:"row q-col-gutter-sm"},nl={key:0},sl={key:1},rl=!0,ul=te({__name:"KnowledgeBaseTabPanel",props:{name:{},activeProduct:{},articlesKB:{}},setup(Q){const i=Q,{t:a}=ae(),{fromMongoFormat:f}=Ye(),D=ot(),v=Ce("auth"),I=$(()=>{var r;return(v==null?void 0:v.value)&&[dt.admin,dt.document_admin].includes((r=v==null?void 0:v.value)==null?void 0:r.role)}),n=F(!1),T=F(),C=bt({}),w=F(!1),N=F(),P=F(!1),p=F(0),h=F(),O=$(()=>{var r,s,m,b,_;return{vinRanges:(r=i.activeProduct)!=null&&r.serialNumber?[{start:i.activeProduct.serialNumber,end:i.activeProduct.serialNumber}]:[],engineNumberRanges:(s=i.activeProduct)!=null&&s.engineNo?[{start:i.activeProduct.engineNo,end:i.activeProduct.engineNo}]:[],markets:(m=i.activeProduct)!=null&&m.marketSpec?[i.activeProduct.marketSpec]:[],modelYears:(b=i.activeProduct)!=null&&b.modelYear?[{start:i.activeProduct.modelYear,end:i.activeProduct.modelYear}]:[],products:(_=i.activeProduct)!=null&&_.modelCode?[i.activeProduct.modelCode]:[]}}),V=$(()=>({createdAt:{path:"createdAt"}})),A=$(()=>[{name:"expand-action",align:"left",sortable:!1,field:"",label:"",noFilter:!0,classes:""},{name:"kbId",field:"kbId",label:a("forms.knowledgeBase.id"),align:"left",sortable:!0},{name:"reportedSymptom",field:"reportedSymptom",label:a("forms.knowledgeBase.reportedSymptom"),align:"left",sortable:!0},{name:"affectedComponent",field:"affectedComponent",label:a("forms.knowledgeBase.affectedComponent"),align:"left",sortable:!0},{name:"createdAt",field:"createdAt",label:a("forms.knowledgeBase.publishedAt"),align:"left",sortable:!0,format:r=>r&&f(r,!0)||"-"},{name:"actions",align:"right",field:"",label:""}]),H=$(()=>I.value?A.value:A.value.filter(r=>r.name!=="actions")),L=async()=>{try{n.value=!0,await D.loadKBArticles()}catch{we({type:"negative",message:a("errors.failedToLoadData"),timeout:5e3})}finally{n.value=!1}},c=(r,s,m)=>{P.value=s,h.value=r,p.value=m},k=r=>{var m,b;const s=(m=r.history)==null?void 0:m.at(-1);return(b=s==null?void 0:s.changeHistory)!=null&&b[0].created?s.user:""};return(r,s)=>(l(),R(ee,null,[e(ge,{name:i.name,style:{padding:"0"}},{default:t(()=>[q("div",el,[e(E,{label:o(a)("buttons.new"),icon:"add",flat:"",color:"white",onClick:s[0]||(s[0]=m=>w.value=!0)},null,8,["label"])]),e(o(Me),{ref_key:"table",ref:T,rows:r.articlesKB,columns:H.value,loading:n.value,"rows-per-page-options":[15,25,50],dense:r.$q.screen.lt.md,"row-key":"_id","binary-state-sort":""},{"top-row":t(m=>[de(q("tr",null,[(l(!0),R(ee,null,le(m.cols.filter(b=>b.name!=="actions"),b=>(l(),R("td",{key:b.name},[V.value[b.name]?(l(),R("div",tl,[e(E,{icon:"event",flat:"",color:"grey-6",disable:b.noFilter},{default:t(()=>[e(Xe,{anchor:"center middle",self:"top middle"},{default:t(()=>[e(ve,{flat:""},{default:t(()=>[e(ue,null,{default:t(()=>[e(Je,{modelValue:C[V.value[b.name].path],"onUpdate:modelValue":_=>C[V.value[b.name].path]=_,minimal:"",range:"",flat:""},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024),C[V.value[b.name].path]?(l(),d(yt,{key:0},{default:t(()=>[e(E,{label:"Clear",flat:"",onClick:_=>C[V.value[b.name].path]=void 0},null,8,["onClick"])]),_:2},1024)):x("",!0)]),_:2},1024)]),_:2},1024)]),_:2},1032,["disable"])])):(l(),d(me,{key:1,modelValue:C[b.name],"onUpdate:modelValue":_=>C[b.name]=_,class:ft({hidden:b.noFilter}),label:b.label,type:"text",dense:"",debounce:"500",clearable:"",disable:b.noFilter},null,8,["modelValue","onUpdate:modelValue","class","label","disable"]))]))),128)),m.cols.filter(b=>b.name==="actions").length?(l(),R("td",al)):x("",!0)],512),[[We,rl]])]),body:t(m=>[e(Ze,{props:m,class:"cursor-pointer",onClick:b=>m.row.expand=!m.row.expand},{default:t(()=>[(l(!0),R(ee,null,le(m.cols,b=>(l(),d(Ae,{key:b.name,props:m,class:"ellipsis",style:{"max-width":"500px"},"auto-width":b.name==="expand-action"||b.name==="actions"},{default:t(()=>[b.name==="expand-action"?(l(),d(E,{key:0,dense:"",round:"",flat:"",icon:m.row.expand?"arrow_drop_up":"arrow_drop_down",class:"q-p-sm",onClick:Ve(_=>m.row.expand=!m.row.expand,["stop"])},null,8,["icon","onClick"])):x("",!0),b.name==="actions"?(l(),d(E,{key:1,dense:"",icon:"edit",flat:"",onClick:Ve(()=>{N.value=m.row,w.value=!0},["stop"])},null,8,["onClick"])):typeof b.value=="boolean"?(l(),d(X,{key:2,name:b.value?"check":"close",color:b.value?"positive":"negative",size:"1.5em"},null,8,["name","color"])):(l(),R(ee,{key:3},[Y(S(b.value),1)],64))]),_:2},1032,["props","auto-width"]))),128))]),_:2},1032,["props","onClick"]),de(e(Ze,{props:m,class:"bg-grey-3"},{default:t(()=>[e(Ae,{colspan:"100%"},{default:t(()=>[e(ve,{flat:"",bordered:""},{default:t(()=>{var b;return[e(ue,{class:"flex justify-between"},{default:t(()=>[q("div",ll,S(m.row.kbId),1),e(oe,{caption:""},{default:t(()=>[Y(S(o(a)("knowledgeBase.createdBy")+" ")+" "+S(k(m.row)),1)]),_:2},1024)]),_:2},1024),m.row.status===o(va).Deprecated?(l(),d(Xa,{key:0})):x("",!0),e($e,{dense:""},{default:t(()=>[e(Te,{label:o(a)("forms.knowledgeBase.reportedSymptom"),value:m.row.reportedSymptom},null,8,["label","value"]),e(Te,{label:o(a)("forms.knowledgeBase.affectedComponent"),value:m.row.affectedComponent},null,8,["label","value"]),e(Te,{label:o(a)("forms.knowledgeBase.partNumber"),value:m.row.partNumber},null,8,["label","value"]),e(Te,{label:o(a)("knowledgeBase.relatedDTC"),value:m.row.relatedDTC},null,8,["label","value"]),e(Te,{label:o(a)("knowledgeBase.repairGuide"),value:m.row.repairGuidance},null,8,["label","value"])]),_:2},1024),(b=m.row.attachments)!=null&&b.length?(l(),d(ue,{key:1,class:"q-mt-md"},{default:t(()=>[q("div",null,[q("b",null,S(o(a)("knowledgeBase.attachments")),1)]),q("div",ol,[(l(!0),R(ee,null,le(m.row.attachments,(_,U)=>(l(),R("div",{key:_._id,class:"col-2"},[e(ca,{attachment:_,onClick:g=>c(_,g,U)},null,8,["attachment","onClick"])]))),128))])]),_:2},1024)):x("",!0),e(ue,null,{default:t(()=>[e(ma,{comments:m.row.comments,"allow-new":!0,"article-id":m.row._id,"can-delete":!1,onNewComment:L,onOnDeleteComment:L},null,8,["comments","article-id"])]),_:2},1024)]}),_:2},1024)]),_:2},1024)]),_:2},1032,["props"]),[[We,m.row.expand]])]),_:1},8,["rows","columns","loading","dense"]),e(lt,{"model-value":w.value,persistent:"","full-width":"","full-height":"",onHide:s[1]||(s[1]=()=>N.value=void 0)},{default:t(()=>[e(ve,{class:"column"},{default:t(()=>[e(Se,{class:"bg-primary text-white"},{default:t(()=>[e(Be,null,{default:t(()=>[N.value?(l(),R("span",nl,[Y(S(o(a)("knowledgeBase.editTitle"))+": ",1),q("strong",null,S(N.value._id),1)])):(l(),R("span",sl,S(o(a)("knowledgeBase.newTitle")),1))]),_:1})]),_:1}),e(ue,{class:"col q-pa-none"},{default:t(()=>[e(Gt,{class:"fit q-pa-md"},{default:t(()=>{var m;return[e(pa,{"kb-id":(m=N.value)==null?void 0:m._id,"on-cancel":()=>{w.value=!1},"on-create-success":()=>{w.value=!1,L()},"on-update-success":()=>{w.value=!1,L()},"prefilled-applicabilities":O.value},null,8,["kb-id","on-cancel","on-create-success","on-update-success","prefilled-applicabilities"])]}),_:1})]),_:1})]),_:1})]),_:1},8,["model-value"])]),_:1},8,["name"]),e(fa,{modelValue:P.value,"onUpdate:modelValue":s[2]||(s[2]=m=>P.value=m),"media-data":h.value,index:p.value},null,8,["modelValue","media-data","index"])],64))}}),il={class:"bg-primary text-white q-px-none"},dl=te({__name:"ProductDetailTabs",props:{productId:{default:""},activeProduct:{default:void 0}},setup(Q){const i=Ce("auth"),a=xe(),{t:f}=ae(),D=ot(),{kbArticles:v,userHasKBAccess:I}=K(D),{getAccessPermissions:n}=D,T=F("docs"),C=$(()=>!!a.params.search);wt(async()=>{await n(),await D.loadKBArticles()});const w=$(()=>{var N,P,p;return[{label:f("products.tabPanels.documents.title"),name:"docs",active:!0,showCount:!1},{label:f("products.tabPanels.accessories.title"),name:"accessories",active:!1,showCount:!1},{label:f("products.tabPanels.parts.title"),name:"parts",active:!1,showCount:!1},{label:f("products.tabPanels.service.title"),name:"service",active:!C.value,showCount:!1},{label:f("products.tabPanels.mot.title"),name:"mot",active:!1,showCount:!1},{label:f("products.tabPanels.diagnostics.title"),name:"diagnostics",active:(P=(N=i==null?void 0:i.value)==null?void 0:N.organisationType)==null?void 0:P.diagnostics,showCount:!1},{label:f("products.tabPanels.sales.title"),name:"sales",active:!1,showCount:!1},{label:f("products.tabPanels.knowledgeBase.title"),name:"knowledge base",active:I.value,showCount:!0,count:((p=v.value)==null?void 0:p.length)||0}]});return(N,P)=>(l(),d(ve,{flat:"",bordered:""},{default:t(()=>[q("div",il,[e(at,{modelValue:T.value,"onUpdate:modelValue":P[0]||(P[0]=p=>T.value=p),"mobile-arrows":"",class:"full-width bg-primary text-white",align:"left","indicator-color":"secondary","active-bg-color":"secondary",dense:o(ie)()},{default:t(()=>[(l(!0),R(ee,null,le(w.value.filter(p=>p.active),p=>(l(),d(qe,{key:p.name,name:p.name},{default:t(()=>[q("span",null,[Y(S(p.label)+" ",1),p.showCount?(l(),d(pt,{key:0,color:"accent","text-color":"white",label:p.count},null,8,["label"])):x("",!0)])]),_:2},1032,["name"]))),128))]),_:1},8,["modelValue","dense"])]),e(ue,{class:"q-pa-none"},{default:t(()=>[e(kt,{modelValue:T.value,"onUpdate:modelValue":P[1]||(P[1]=p=>T.value=p),"keep-alive":!0,animated:"","transition-prev":"fade","transition-next":"fade"},{default:t(()=>{var p;return[e(ha,{"product-id":N.productId,name:"docs"},null,8,["product-id","name"]),C.value?x("",!0):(l(),d(Ga,{key:0,name:"service"},null,8,["name"])),(p=o(i))!=null&&p.organisationType.diagnostics?(l(),d(xa,{key:1,name:"diagnostics"},null,8,["name"])):x("",!0),e(Ca,{name:"parts"},null,8,["name"]),e(Ta,{name:"mot"},null,8,["name"]),e(ul,{name:"knowledge base","active-product":N.activeProduct,"articles-k-b":o(v)},null,8,["name","active-product","articles-k-b"])]}),_:1},8,["modelValue"])]),_:1})]),_:1}))}}),cl=te({__name:"RecallPopup",setup(Q){const i=Oe(),{t:a}=ae(),f=ke(),{hasValidProductRelevantSubscription:D}=K(f),{bulletins:v}=K(nt()),{userDocLang:I}=K(f),n=I.value,T=F(!0),C=$(()=>v.value.filter(N=>N.language.toLowerCase()===n.toLowerCase())),w=N=>{i.push(`/document/${N}`)};return(N,P)=>(l(),d(lt,{modelValue:T.value,"onUpdate:modelValue":P[0]||(P[0]=p=>T.value=p),persistent:""},{default:t(()=>[e(ve,null,{default:t(()=>[e(Se,{class:"bg-primary text-white"},{default:t(()=>[e(Be,null,{default:t(()=>[e(X,{color:"white",name:"fad fa-exclamation-triangle",class:"q-ml-xs"}),Y(" "+S(o(a)("products.recallPopup.title")),1)]),_:1}),de(e(E,{flat:"",round:"",dense:"",icon:"close",class:"q-mr-xs"},null,512),[[he]])]),_:1}),e(ue,null,{default:t(()=>[q("p",null,S(o(a)("products.recallPopup.message")),1),e($e,{bordered:""},{default:t(()=>[e(oe,{header:""},{default:t(()=>[Y(S(o(a)("documents.featureName")),1)]),_:1}),e(_t),(l(!0),R(ee,null,le(C.value,p=>(l(),d(re,{key:p._id,disable:!o(D)&&!p.metadata.docType.isRecall&&!p.metadata.docType.free,clickable:"",onClick:h=>w(p._id)},{default:t(()=>[e(Z,{avatar:""},{default:t(()=>[p.metadata.docType.isRecall?(l(),d(X,{key:0,color:"red",name:"fad fa-exclamation-triangle"})):(l(),d(X,{key:1,color:"orange-8",name:"fad fa-file-invoice"}))]),_:2},1024),e(Z,null,{default:t(()=>[e(oe,null,{default:t(()=>[Y(S(p.title),1)]),_:2},1024),e(oe,{caption:""},{default:t(()=>[Y(S(p.metadata.docType.title[o(n)]?p.metadata.docType.title[o(n)]:p.metadata.docType.systemTitle),1)]),_:2},1024)]),_:2},1024)]),_:2},1032,["disable","onClick"]))),128))]),_:1})]),_:1}),e(yt,{align:"right"},{default:t(()=>[de(e(E,{label:o(a)("buttons.ok"),color:"primary"},null,8,["label"]),[[he]])]),_:1})]),_:1})]),_:1},8,["modelValue"]))}}),ml=et("featureCodes",()=>{const Q=F(void 0),i=async D=>{try{const{data:v}=await fe.get("/feature-codes/type-approval",{params:{featureCode:D}});Q.value=v}catch(v){_e(v,!1)}},a=F({});return{wvta:Q,features:a,getWvta:i,getFeature:async D=>{try{const{data:v}=await fe.get("/feature-codes",{params:{code:D}});return a.value[v.type]=v,v}catch(v){_e(v,!1)}}}}),pl={class:"row q-col-gutter-md"},fl={class:"col-xs-12 col-sm"},vl={class:"col-xs-12 col-sm"},Xl=te({__name:"ProductPage",setup(Q){const{updateUserHistory:i}=Wt(),a=Jt(),f=Fe(),{activeProduct:D}=K(f),v=xe(),{t:I}=ae(),n=Re(),{productContext:T}=K(n),C=St(),{product:w,serialSearch:N}=K(C),P=ga(),{productDetail:p}=K(P),{loadDocumentTabs:h}=vt(),O=ml(),{getWvta:V,getFeature:A}=O,{wvta:H,features:L}=K(O),c=nt(),{getBulletins:k}=c,{bulletins:r}=K(c),s=ke(),{isNetworkConnected:m}=K(s),b=ot(),_=$(()=>{var J;return((J=p.value)==null?void 0:J._id)&&`${gt()}/product-details/${p.value._id}/image`}),U=$(()=>({product:w.value,type:p.value})),g=F(void 0),W=$(()=>!!v.params.search),ce=async()=>!m.value&&ie()?(await C.loadOfflineProductById(v.params.id.toString()),w.value||p.value):W.value?(await P.loadModelDetailsById(v.params.id.toString()),p.value):(await C.loadProductInstanceById(v.params.id.toString()),w.value);return wt(async()=>{var be,ne,se,Le;if(g.value=await ce(),T.value=g.value,D.value=g.value,!g.value){we({type:"negative",message:I("errors.noProductFound")});return}const J=[h(),b.loadKBArticles()];if(!m.value&&ie())J.push(a.loadAllOfflineMarkets()),J.push(f.loadActiveProductOfflineDocuments());else if(J.push(a.loadAllMarkets()),J.push(fe.post("/tracking/productSearch",{productId:(be=g.value)==null?void 0:be._id,type:n.productContextType})),J.push(f.loadProductDocuments({modelCode:g.value.modelCode,modelYear:g.value.modelYear,serial:g.value.serialNumberStub,engineNo:g.value.engineNo,state:"published",onlyValid:!0,market:g.value.marketSpec||""})),J.push(i({historyType:"productHistory",modelCode:g.value.modelCode||"",modelYear:g.value.modelYear||"",_id:g.value._id||"",serialNumber:"serialNumber"in g.value?g.value.serialNumber:void 0})),!W.value){const j=g.value;J.push(P.findSingleProductDetail({modelCode:j.modelCode,modelYear:j.modelYear}),k(j==null?void 0:j.serialNumber)),(ne=j==null?void 0:j.featureCodes)!=null&&ne.TYPAPPNUM&&J.push(V(((se=j==null?void 0:j.featureCodes)==null?void 0:se.TYPAPPNUM)||"")),(Le=j==null?void 0:j.featureCodes)!=null&&Le.CO&&J.push(A(j==null?void 0:j.featureCodes.CO))}Pe(!0),await Promise.all(J),Pe(!1)}),Zt(()=>{w.value&&Object.keys(w.value).length&&(N.value=w.value.serialNumber)}),Xt(()=>{f.$patch({documents:[]}),w.value=void 0,p.value=void 0,H.value=void 0,r.value=[]}),(J,be)=>(l(),d(ea,{padding:!o(ie)()},{default:t(()=>[e(ve,{flat:o(ie)()},{default:t(()=>[e(Se,{class:"bg-primary text-white"},{default:t(()=>{var ne,se;return[e(ta,{product:U.value,wvta:o(H),colour:(se=(ne=o(L))==null?void 0:ne.CO)==null?void 0:se.value},null,8,["product","wvta","colour"])]}),_:1}),e(ue,null,{default:t(()=>[q("div",pl,[q("div",fl,[e(aa,{"image-url":_.value},null,8,["image-url"])]),q("div",vl,[e(ba)])])]),_:1}),e(ue,null,{default:t(()=>{var ne,se;return[(ne=g.value)!=null&&ne._id?(l(),d(dl,{key:0,"product-id":(se=g.value)==null?void 0:se._id,"active-product":g.value},null,8,["product-id","active-product"])):x("",!0)]}),_:1})]),_:1},8,["flat"]),o(r).length?(l(),d(cl,{key:0})):x("",!0)]),_:1},8,["padding"]))}});export{Xl as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
