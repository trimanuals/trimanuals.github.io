import{e as je,ac as Pe,an as Qe,r as ee,n as ke,N as Re,ap as he,aq as Fe,ar as K,as as $,J as Ze,au as se,aQ as Ve,ax as ye,C as $e,aP as xe,av as De,aw as _e,aS as Oe,bb as Ke,a$ as He,aZ as We,a7 as Je,a5 as Ye,a6 as ze,aN as Se,Q as Ue,bn as Ge,a4 as Xe,bs as Ie,bo as et}from"./index.6def9867.js";import{Q as tt}from"./QExpansionItem.46d34000.js";import{Q as rt}from"./QUploader.a637749d.js";import{a as Be}from"./QSelect.afec6258.js";var qe={exports:{}};/* @license
Papa Parse
v5.4.1
https://github.com/mholt/PapaParse
License: MIT
*/(function(Ce,Ee){(function(T,R){Ce.exports=R()})(je,function T(){var R=typeof self!="undefined"?self:typeof window!="undefined"?window:R!==void 0?R:{},j=!R.document&&!!R.postMessage,ae=R.IS_PAPA_WORKER||!1,H={},oe=0,f={parse:function(t,e){var i=(e=e||{}).dynamicTyping||!1;if(v(i)&&(e.dynamicTypingFunction=i,i={}),e.dynamicTyping=i,e.transform=!!v(e.transform)&&e.transform,e.worker&&f.WORKERS_SUPPORTED){var a=function(){if(!f.WORKERS_SUPPORTED)return!1;var r=(o=R.URL||R.webkitURL||null,d=T.toString(),f.BLOB_URL||(f.BLOB_URL=o.createObjectURL(new Blob(["var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; ","(",d,")();"],{type:"text/javascript"})))),n=new R.Worker(r),o,d;return n.onmessage=_,n.id=oe++,H[n.id]=n}();return a.userStep=e.step,a.userChunk=e.chunk,a.userComplete=e.complete,a.userError=e.error,e.step=v(e.step),e.chunk=v(e.chunk),e.complete=v(e.complete),e.error=v(e.error),delete e.worker,void a.postMessage({input:t,config:e,workerId:a.id})}var u=null;return f.NODE_STREAM_INPUT,typeof t=="string"?(t=function(r){return r.charCodeAt(0)===65279?r.slice(1):r}(t),u=e.download?new re(e):new Z(e)):t.readable===!0&&v(t.read)&&v(t.on)?u=new ne(e):(R.File&&t instanceof File||t instanceof Object)&&(u=new W(e)),u.stream(t)},unparse:function(t,e){var i=!1,a=!0,u=",",r=`\r
`,n='"',o=n+n,d=!1,s=null,y=!1;(function(){if(typeof e=="object"){if(typeof e.delimiter!="string"||f.BAD_DELIMITERS.filter(function(l){return e.delimiter.indexOf(l)!==-1}).length||(u=e.delimiter),(typeof e.quotes=="boolean"||typeof e.quotes=="function"||Array.isArray(e.quotes))&&(i=e.quotes),typeof e.skipEmptyLines!="boolean"&&typeof e.skipEmptyLines!="string"||(d=e.skipEmptyLines),typeof e.newline=="string"&&(r=e.newline),typeof e.quoteChar=="string"&&(n=e.quoteChar),typeof e.header=="boolean"&&(a=e.header),Array.isArray(e.columns)){if(e.columns.length===0)throw new Error("Option columns is empty");s=e.columns}e.escapeChar!==void 0&&(o=e.escapeChar+n),(typeof e.escapeFormulae=="boolean"||e.escapeFormulae instanceof RegExp)&&(y=e.escapeFormulae instanceof RegExp?e.escapeFormulae:/^[=+\-@\t\r].*$/)}})();var h=new RegExp(g(n),"g");if(typeof t=="string"&&(t=JSON.parse(t)),Array.isArray(t)){if(!t.length||Array.isArray(t[0]))return Q(null,t,d);if(typeof t[0]=="object")return Q(s||Object.keys(t[0]),t,d)}else if(typeof t=="object")return typeof t.data=="string"&&(t.data=JSON.parse(t.data)),Array.isArray(t.data)&&(t.fields||(t.fields=t.meta&&t.meta.fields||s),t.fields||(t.fields=Array.isArray(t.data[0])?t.fields:typeof t.data[0]=="object"?Object.keys(t.data[0]):[]),Array.isArray(t.data[0])||typeof t.data[0]=="object"||(t.data=[t.data])),Q(t.fields||[],t.data||[],d);throw new Error("Unable to serialize unrecognized input");function Q(l,x,B){var I="";typeof l=="string"&&(l=JSON.parse(l)),typeof x=="string"&&(x=JSON.parse(x));var P=Array.isArray(l)&&0<l.length,U=!Array.isArray(x[0]);if(P&&a){for(var M=0;M<l.length;M++)0<M&&(I+=u),I+=D(l[M],M);0<x.length&&(I+=r)}for(var c=0;c<x.length;c++){var b=P?l.length:x[c].length,O=!1,F=P?Object.keys(x[c]).length===0:x[c].length===0;if(B&&!P&&(O=B==="greedy"?x[c].join("").trim()==="":x[c].length===1&&x[c][0].length===0),B==="greedy"&&P){for(var C=[],q=0;q<b;q++){var A=U?l[q]:q;C.push(x[c][A])}O=C.join("").trim()===""}if(!O){for(var E=0;E<b;E++){0<E&&!F&&(I+=u);var te=P&&U?l[E]:E;I+=D(x[c][te],E)}c<x.length-1&&(!B||0<b&&!F)&&(I+=r)}}return I}function D(l,x){if(l==null)return"";if(l.constructor===Date)return JSON.stringify(l).slice(1,25);var B=!1;y&&typeof l=="string"&&y.test(l)&&(l="'"+l,B=!0);var I=l.toString().replace(h,o);return(B=B||i===!0||typeof i=="function"&&i(l,x)||Array.isArray(i)&&i[x]||function(P,U){for(var M=0;M<U.length;M++)if(-1<P.indexOf(U[M]))return!0;return!1}(I,f.BAD_DELIMITERS)||-1<I.indexOf(u)||I.charAt(0)===" "||I.charAt(I.length-1)===" ")?n+I+n:I}}};if(f.RECORD_SEP=String.fromCharCode(30),f.UNIT_SEP=String.fromCharCode(31),f.BYTE_ORDER_MARK="\uFEFF",f.BAD_DELIMITERS=["\r",`
`,'"',f.BYTE_ORDER_MARK],f.WORKERS_SUPPORTED=!j&&!!R.Worker,f.NODE_STREAM_INPUT=1,f.LocalChunkSize=10485760,f.RemoteChunkSize=5242880,f.DefaultDelimiter=",",f.Parser=p,f.ParserHandle=ue,f.NetworkStreamer=re,f.FileStreamer=W,f.StringStreamer=Z,f.ReadableStreamStreamer=ne,R.jQuery){var le=R.jQuery;le.fn.parse=function(t){var e=t.config||{},i=[];return this.each(function(r){if(!(le(this).prop("tagName").toUpperCase()==="INPUT"&&le(this).attr("type").toLowerCase()==="file"&&R.FileReader)||!this.files||this.files.length===0)return!0;for(var n=0;n<this.files.length;n++)i.push({file:this.files[n],inputElem:this,instanceConfig:le.extend({},e)})}),a(),this;function a(){if(i.length!==0){var r,n,o,d,s=i[0];if(v(t.before)){var y=t.before(s.file,s.inputElem);if(typeof y=="object"){if(y.action==="abort")return r="AbortError",n=s.file,o=s.inputElem,d=y.reason,void(v(t.error)&&t.error({name:r},n,o,d));if(y.action==="skip")return void u();typeof y.config=="object"&&(s.instanceConfig=le.extend(s.instanceConfig,y.config))}else if(y==="skip")return void u()}var h=s.instanceConfig.complete;s.instanceConfig.complete=function(Q){v(h)&&h(Q,s.file,s.inputElem),u()},f.parse(s.file,s.instanceConfig)}else v(t.complete)&&t.complete()}function u(){i.splice(0,1),a()}}}function N(t){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var i=V(e);i.chunkSize=parseInt(i.chunkSize),e.step||e.chunk||(i.chunkSize=null),this._handle=new ue(i),(this._handle.streamer=this)._config=i}.call(this,t),this.parseChunk=function(e,i){if(this.isFirstChunk&&v(this._config.beforeFirstChunk)){var a=this._config.beforeFirstChunk(e);a!==void 0&&(e=a)}this.isFirstChunk=!1,this._halted=!1;var u=this._partialLine+e;this._partialLine="";var r=this._handle.parse(u,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var n=r.meta.cursor;this._finished||(this._partialLine=u.substring(n-this._baseIndex),this._baseIndex=n),r&&r.data&&(this._rowCount+=r.data.length);var o=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(ae)R.postMessage({results:r,workerId:f.WORKER_ID,finished:o});else if(v(this._config.chunk)&&!i){if(this._config.chunk(r,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);r=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(r.data),this._completeResults.errors=this._completeResults.errors.concat(r.errors),this._completeResults.meta=r.meta),this._completed||!o||!v(this._config.complete)||r&&r.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),o||r&&r.meta.paused||this._nextChunk(),r}this._halted=!0},this._sendError=function(e){v(this._config.error)?this._config.error(e):ae&&this._config.error&&R.postMessage({workerId:f.WORKER_ID,error:e,finished:!1})}}function re(t){var e;(t=t||{}).chunkSize||(t.chunkSize=f.RemoteChunkSize),N.call(this,t),this._nextChunk=j?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(i){this._input=i,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(e=new XMLHttpRequest,this._config.withCredentials&&(e.withCredentials=this._config.withCredentials),j||(e.onload=z(this._chunkLoaded,this),e.onerror=z(this._chunkError,this)),e.open(this._config.downloadRequestBody?"POST":"GET",this._input,!j),this._config.downloadRequestHeaders){var i=this._config.downloadRequestHeaders;for(var a in i)e.setRequestHeader(a,i[a])}if(this._config.chunkSize){var u=this._start+this._config.chunkSize-1;e.setRequestHeader("Range","bytes="+this._start+"-"+u)}try{e.send(this._config.downloadRequestBody)}catch(r){this._chunkError(r.message)}j&&e.status===0&&this._chunkError()}},this._chunkLoaded=function(){e.readyState===4&&(e.status<200||400<=e.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:e.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(i){var a=i.getResponseHeader("Content-Range");return a===null?-1:parseInt(a.substring(a.lastIndexOf("/")+1))}(e),this.parseChunk(e.responseText)))},this._chunkError=function(i){var a=e.statusText||i;this._sendError(new Error(a))}}function W(t){var e,i;(t=t||{}).chunkSize||(t.chunkSize=f.LocalChunkSize),N.call(this,t);var a=typeof FileReader!="undefined";this.stream=function(u){this._input=u,i=u.slice||u.webkitSlice||u.mozSlice,a?((e=new FileReader).onload=z(this._chunkLoaded,this),e.onerror=z(this._chunkError,this)):e=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var u=this._input;if(this._config.chunkSize){var r=Math.min(this._start+this._config.chunkSize,this._input.size);u=i.call(u,this._start,r)}var n=e.readAsText(u,this._config.encoding);a||this._chunkLoaded({target:{result:n}})},this._chunkLoaded=function(u){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(u.target.result)},this._chunkError=function(){this._sendError(e.error)}}function Z(t){var e;N.call(this,t=t||{}),this.stream=function(i){return e=i,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var i,a=this._config.chunkSize;return a?(i=e.substring(0,a),e=e.substring(a)):(i=e,e=""),this._finished=!e,this.parseChunk(i)}}}function ne(t){N.call(this,t=t||{});var e=[],i=!0,a=!1;this.pause=function(){N.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){N.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(u){this._input=u,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){a&&e.length===1&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),e.length?this.parseChunk(e.shift()):i=!0},this._streamData=z(function(u){try{e.push(typeof u=="string"?u:u.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(e.shift()))}catch(r){this._streamError(r)}},this),this._streamError=z(function(u){this._streamCleanUp(),this._sendError(u)},this),this._streamEnd=z(function(){this._streamCleanUp(),a=!0,this._streamData("")},this),this._streamCleanUp=z(function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)},this)}function ue(t){var e,i,a,u=Math.pow(2,53),r=-u,n=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,o=/^((\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z)))$/,d=this,s=0,y=0,h=!1,Q=!1,D=[],l={data:[],errors:[],meta:{}};if(v(t.step)){var x=t.step;t.step=function(c){if(l=c,P())I();else{if(I(),l.data.length===0)return;s+=c.data.length,t.preview&&s>t.preview?i.abort():(l.data=l.data[0],x(l,d))}}}function B(c){return t.skipEmptyLines==="greedy"?c.join("").trim()==="":c.length===1&&c[0].length===0}function I(){return l&&a&&(M("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+f.DefaultDelimiter+"'"),a=!1),t.skipEmptyLines&&(l.data=l.data.filter(function(c){return!B(c)})),P()&&function(){if(!l)return;function c(O,F){v(t.transformHeader)&&(O=t.transformHeader(O,F)),D.push(O)}if(Array.isArray(l.data[0])){for(var b=0;P()&&b<l.data.length;b++)l.data[b].forEach(c);l.data.splice(0,1)}else l.data.forEach(c)}(),function(){if(!l||!t.header&&!t.dynamicTyping&&!t.transform)return l;function c(O,F){var C,q=t.header?{}:[];for(C=0;C<O.length;C++){var A=C,E=O[C];t.header&&(A=C>=D.length?"__parsed_extra":D[C]),t.transform&&(E=t.transform(E,A)),E=U(A,E),A==="__parsed_extra"?(q[A]=q[A]||[],q[A].push(E)):q[A]=E}return t.header&&(C>D.length?M("FieldMismatch","TooManyFields","Too many fields: expected "+D.length+" fields but parsed "+C,y+F):C<D.length&&M("FieldMismatch","TooFewFields","Too few fields: expected "+D.length+" fields but parsed "+C,y+F)),q}var b=1;return!l.data.length||Array.isArray(l.data[0])?(l.data=l.data.map(c),b=l.data.length):l.data=c(l.data,0),t.header&&l.meta&&(l.meta.fields=D),y+=b,l}()}function P(){return t.header&&D.length===0}function U(c,b){return O=c,t.dynamicTypingFunction&&t.dynamicTyping[O]===void 0&&(t.dynamicTyping[O]=t.dynamicTypingFunction(O)),(t.dynamicTyping[O]||t.dynamicTyping)===!0?b==="true"||b==="TRUE"||b!=="false"&&b!=="FALSE"&&(function(F){if(n.test(F)){var C=parseFloat(F);if(r<C&&C<u)return!0}return!1}(b)?parseFloat(b):o.test(b)?new Date(b):b===""?null:b):b;var O}function M(c,b,O,F){var C={type:c,code:b,message:O};F!==void 0&&(C.row=F),l.errors.push(C)}this.parse=function(c,b,O){var F=t.quoteChar||'"';if(t.newline||(t.newline=function(A,E){A=A.substring(0,1048576);var te=new RegExp(g(E)+"([^]*?)"+g(E),"gm"),J=(A=A.replace(te,"")).split("\r"),ie=A.split(`
`),de=1<ie.length&&ie[0].length<J[0].length;if(J.length===1||de)return`
`;for(var Y=0,S=0;S<J.length;S++)J[S][0]===`
`&&Y++;return Y>=J.length/2?`\r
`:"\r"}(c,F)),a=!1,t.delimiter)v(t.delimiter)&&(t.delimiter=t.delimiter(c),l.meta.delimiter=t.delimiter);else{var C=function(A,E,te,J,ie){var de,Y,S,L;ie=ie||[",","	","|",";",f.RECORD_SEP,f.UNIT_SEP];for(var me=0;me<ie.length;me++){var k=ie[me],be=0,fe=0,ve=0;S=void 0;for(var ce=new p({comments:J,delimiter:k,newline:E,preview:10}).parse(A),pe=0;pe<ce.data.length;pe++)if(te&&B(ce.data[pe]))ve++;else{var ge=ce.data[pe].length;fe+=ge,S!==void 0?0<ge&&(be+=Math.abs(ge-S),S=ge):S=ge}0<ce.data.length&&(fe/=ce.data.length-ve),(Y===void 0||be<=Y)&&(L===void 0||L<fe)&&1.99<fe&&(Y=be,de=k,L=fe)}return{successful:!!(t.delimiter=de),bestDelimiter:de}}(c,t.newline,t.skipEmptyLines,t.comments,t.delimitersToGuess);C.successful?t.delimiter=C.bestDelimiter:(a=!0,t.delimiter=f.DefaultDelimiter),l.meta.delimiter=t.delimiter}var q=V(t);return t.preview&&t.header&&q.preview++,e=c,i=new p(q),l=i.parse(e,b,O),I(),h?{meta:{paused:!0}}:l||{meta:{paused:!1}}},this.paused=function(){return h},this.pause=function(){h=!0,i.abort(),e=v(t.chunk)?"":e.substring(i.getCharIndex())},this.resume=function(){d.streamer._halted?(h=!1,d.streamer.parseChunk(e,!0)):setTimeout(d.resume,3)},this.aborted=function(){return Q},this.abort=function(){Q=!0,i.abort(),l.meta.aborted=!0,v(t.complete)&&t.complete(l),e=""}}function g(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function p(t){var e,i=(t=t||{}).delimiter,a=t.newline,u=t.comments,r=t.step,n=t.preview,o=t.fastMode,d=e=t.quoteChar===void 0||t.quoteChar===null?'"':t.quoteChar;if(t.escapeChar!==void 0&&(d=t.escapeChar),(typeof i!="string"||-1<f.BAD_DELIMITERS.indexOf(i))&&(i=","),u===i)throw new Error("Comment character same as delimiter");u===!0?u="#":(typeof u!="string"||-1<f.BAD_DELIMITERS.indexOf(u))&&(u=!1),a!==`
`&&a!=="\r"&&a!==`\r
`&&(a=`
`);var s=0,y=!1;this.parse=function(h,Q,D){if(typeof h!="string")throw new Error("Input must be a string");var l=h.length,x=i.length,B=a.length,I=u.length,P=v(r),U=[],M=[],c=[],b=s=0;if(!h)return G();if(t.header&&!Q){var O=h.split(a)[0].split(i),F=[],C={},q=!1;for(var A in O){var E=O[A];v(t.transformHeader)&&(E=t.transformHeader(E,A));var te=E,J=C[E]||0;for(0<J&&(q=!0,te=E+"_"+J),C[E]=J+1;F.includes(te);)te=te+"_"+J;F.push(te)}if(q){var ie=h.split(a);ie[0]=F.join(i),h=ie.join(a)}}if(o||o!==!1&&h.indexOf(e)===-1){for(var de=h.split(a),Y=0;Y<de.length;Y++){if(c=de[Y],s+=c.length,Y!==de.length-1)s+=a.length;else if(D)return G();if(!u||c.substring(0,I)!==u){if(P){if(U=[],ve(c.split(i)),we(),y)return G()}else ve(c.split(i));if(n&&n<=Y)return U=U.slice(0,n),G(!0)}}return G()}for(var S=h.indexOf(i,s),L=h.indexOf(a,s),me=new RegExp(g(d)+g(e),"g"),k=h.indexOf(e,s);;)if(h[s]!==e)if(u&&c.length===0&&h.substring(s,s+I)===u){if(L===-1)return G();s=L+B,L=h.indexOf(a,s),S=h.indexOf(i,s)}else if(S!==-1&&(S<L||L===-1))c.push(h.substring(s,S)),s=S+x,S=h.indexOf(i,s);else{if(L===-1)break;if(c.push(h.substring(s,L)),ge(L+B),P&&(we(),y))return G();if(n&&U.length>=n)return G(!0)}else for(k=s,s++;;){if((k=h.indexOf(e,k+1))===-1)return D||M.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:U.length,index:s}),pe();if(k===l-1)return pe(h.substring(s,k).replace(me,e));if(e!==d||h[k+1]!==d){if(e===d||k===0||h[k-1]!==d){S!==-1&&S<k+1&&(S=h.indexOf(i,k+1)),L!==-1&&L<k+1&&(L=h.indexOf(a,k+1));var be=ce(L===-1?S:Math.min(S,L));if(h.substr(k+1+be,x)===i){c.push(h.substring(s,k).replace(me,e)),h[s=k+1+be+x]!==e&&(k=h.indexOf(e,s)),S=h.indexOf(i,s),L=h.indexOf(a,s);break}var fe=ce(L);if(h.substring(k+1+fe,k+1+fe+B)===a){if(c.push(h.substring(s,k).replace(me,e)),ge(k+1+fe+B),S=h.indexOf(i,s),k=h.indexOf(e,s),P&&(we(),y))return G();if(n&&U.length>=n)return G(!0);break}M.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:U.length,index:s}),k++}}else k++}return pe();function ve(X){U.push(X),b=s}function ce(X){var Te=0;if(X!==-1){var Ae=h.substring(k+1,X);Ae&&Ae.trim()===""&&(Te=Ae.length)}return Te}function pe(X){return D||(X===void 0&&(X=h.substring(s)),c.push(X),s=l,ve(c),P&&we()),G()}function ge(X){s=X,ve(c),c=[],L=h.indexOf(a,s)}function G(X){return{data:U,errors:M,meta:{delimiter:i,linebreak:a,aborted:y,truncated:!!X,cursor:b+(Q||0)}}}function we(){r(G()),U=[],M=[]}},this.abort=function(){y=!0},this.getCharIndex=function(){return s}}function _(t){var e=t.data,i=H[e.workerId],a=!1;if(e.error)i.userError(e.error,e.file);else if(e.results&&e.results.data){var u={abort:function(){a=!0,m(e.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:w,resume:w};if(v(i.userStep)){for(var r=0;r<e.results.data.length&&(i.userStep({data:e.results.data[r],errors:e.results.errors,meta:e.results.meta},u),!a);r++);delete e.results}else v(i.userChunk)&&(i.userChunk(e.results,u,e.file),delete e.results)}e.finished&&!a&&m(e.workerId,e.results)}function m(t,e){var i=H[t];v(i.userComplete)&&i.userComplete(e),i.terminate(),delete H[t]}function w(){throw new Error("Not implemented.")}function V(t){if(typeof t!="object"||t===null)return t;var e=Array.isArray(t)?[]:{};for(var i in t)e[i]=V(t[i]);return e}function z(t,e){return function(){t.apply(e,arguments)}}function v(t){return typeof t=="function"}return ae&&(R.onmessage=function(t){var e=t.data;if(f.WORKER_ID===void 0&&e&&(f.WORKER_ID=e.workerId),typeof e.input=="string")R.postMessage({workerId:f.WORKER_ID,results:f.parse(e.input,e.config),finished:!0});else if(R.File&&e.input instanceof File||e.input instanceof Object){var i=f.parse(e.input,e.config);i&&R.postMessage({workerId:f.WORKER_ID,results:i,finished:!0})}}),(re.prototype=Object.create(N.prototype)).constructor=re,(W.prototype=Object.create(N.prototype)).constructor=W,(Z.prototype=Object.create(Z.prototype)).constructor=Z,(ne.prototype=Object.create(N.prototype)).constructor=ne,f})})(qe);var nt=qe.exports;const it={style:{"max-height":"200px"},class:"scroll"},Le="0",ut=Pe({__name:"AlphaNumericSelector",props:{modelValue:{default:()=>[]},maxLength:{default:6},label:{},readonly:{type:Boolean}},emits:["update:modelValue"],setup(Ce,{emit:Ee}){const{t:T}=Qe(),R=ee(""),j=(r,n="0",o="ZZZZZZZ")=>{let d=r.split("-"),[s,y]=d;return d.length===1&&(y=s),s===""&&(s=n),y===""&&(y=o),{start:s,end:y}},ae=(r,n="0",o="ZZZZZZZ")=>{let{start:d,end:s}=r;if(!(d===n&&s===o)){if(d===s)return d;d===n&&(d=""),s===o&&(s="")}return[d,s].join("-")},H=r=>{r.sort((n,o)=>n.start===o.start?n.end>o.end?-1:1:n.start<o.start?-1:1)},oe=r=>{r=Ie.exports.cloneDeep(r),H(r);let n={};const o=[];return r.forEach(d=>{if(Object.values(n).length===0)return n=d;let{end:s}=n;const{start:y,end:h}=d,Q=y<=s,D=h>=s;Q&&D&&(n.end=h),Q||(o.push(n),n=d)}),Object.values(n).length!==0&&o.push(n),o},f=Ce,le=Ee,N=ee(!1),re=ee([]),W=ee([]),Z=ee([]),ne=ee(!1),ue=ee(null),g=ke(()=>"z".repeat(f.maxLength)),p=r=>typeof r!="string"?!1:(r=r.trim(),r.length===6||r.length===16),_=r=>{r=R.value;const n=r.split("-"),[o,d]=n,s=d!=="",y=o!=="",h=s&&y,Q=d===void 0,D=r==="";if(Q){if(o.length!==f.maxLength&&!D)return T("errors.vinRange")}else if(h){if(o.length!==f.maxLength||(d!=null?d:"").length!==f.maxLength)return T("errors.vinRange")}else if(s){if(d.length!==f.maxLength)return T("errors.vinRange")}else if(y&&o.length!==f.maxLength)return T("errors.vinRange");return n.length>2?T("errors.vinRange"):n.length===2&&d!==""&&o>=d?T("errors.rangeOrder"):!0},m=ke(()=>{if(Z.value===null)return[];let r=Z.value.map(n=>n[0]);return ne.value&&r.splice(0,1),r}),w=ke(()=>[...m.value].filter(n=>!p(n)).map((n,o)=>({val:n,row:o}))),V=ke(()=>[...m.value].filter(n=>p(n))),z=ke(()=>{if(V.value===null)return null;let r=V.value.map(n=>j(n,Le,g.value));return H(r),oe(r)}),v=ke(()=>{var r;return Z.value===null?"":T("documents.applicabilities.importVinSummary",{rowCount:m.value.length,rangeCount:((r=z.value)==null?void 0:r.length)||0,rejectCount:w.value.length})}),t=()=>{Z.value=[]},e=(r,n)=>{var d,s;(d=ue.value)==null||d.validate(),!((s=ue.value)!=null&&s.hasError)&&r!==""&&n(r)},i=async r=>await new Promise(n=>{nt.parse(r,{complete:function(o){n(o.data)}})}),a=ee(null),u=async()=>{var n;const r=(n=a.value)==null?void 0:n.files[0];Z.value=await i(r)};return Re(()=>f.modelValue,r=>re.value=oe(r),{immediate:!0}),Re(()=>re.value,(r,n)=>{!Ie.exports.isEqual(r,n)&&(W.value=r.map(d=>ae(d,Le,g.value)),le("update:modelValue",r))},{immediate:!0}),Re(()=>W.value,r=>{re.value=r.map(n=>j(n,Le,g.value))},{immediate:!0}),(r,n)=>(he(),Fe("div",null,[K(se(Be),{ref_key:"selector",ref:ue,modelValue:W.value,"onUpdate:modelValue":n[1]||(n[1]=o=>W.value=o),rules:[o=>_(o)],label:r.label,readonly:r.readonly,"lazy-rules":"ondemand",multiple:"","use-input":"","use-chips":"","hide-dropdown-icon":"","no-error-icon":"",onNewValue:e,onBlur:n[2]||(n[2]=o=>{var d;return(d=ue.value)==null?void 0:d.resetValidation()}),onInputValue:n[3]||(n[3]=o=>R.value=o)},{append:$(()=>[K(Ze,{class:"cursor-pointer",name:"file_upload",onClick:n[0]||(n[0]=o=>N.value=!N.value)})]),_:1},8,["modelValue","rules","label","readonly"]),K(Xe,{modelValue:N.value,"onUpdate:modelValue":n[6]||(n[6]=o=>N.value=o),onHide:t},{default:$(()=>[K(Ve,{style:{width:"100%"}},{default:$(()=>[K(se(rt),{ref_key:"uploader",ref:a,label:se(T)("documents.applicabilities.selectRangeFile"),multiple:!1,"hide-upload-btn":"",class:"full-width",accept:".csv",onAdded:u,onRemoved:t},null,8,["label"]),Z.value?(he(),ye(xe,{key:0},{default:$(()=>[K($e,{modelValue:ne.value,"onUpdate:modelValue":n[4]||(n[4]=o=>ne.value=o),label:se(T)("documents.applicabilities.excludeCsvHeader")},null,8,["modelValue","label"]),v.value?(he(),ye(xe,{key:0},{default:$(()=>[De("div",null,_e(v.value),1)]),_:1})):Oe("",!0),w.value.length!==0?(he(),ye(tt,{key:1,label:se(T)("documents.applicabilities.rejectedRows")},{default:$(()=>[K(Ve,null,{default:$(()=>[K(xe,null,{default:$(()=>[De("div",it,[w.value.length?(he(),ye(Ke,{key:0,dense:""},{default:$(()=>[(he(!0),Fe(He,null,We(w.value,o=>(he(),ye(Je,{key:o.row},{default:$(()=>[K(Ye,null,{default:$(()=>[K(ze,null,{default:$(()=>[Se(_e(se(T)("documents.applicabilities.rowNo"))+": "+_e(o.row),1)]),_:2},1024),K(ze,{caption:""},{default:$(()=>[Se(_e(se(T)("documents.applicabilities.rowVal"))+": "+_e(o.val),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})):Oe("",!0)])]),_:1})]),_:1})]),_:1},8,["label"])):Oe("",!0),K(xe),De("div",null,[K(Ue,{color:"primary",onClick:n[5]||(n[5]=o=>{W.value.push(...V.value),N.value=!1})},{default:$(()=>[Se(_e(se(T)("buttons.add")),1)]),_:1}),Ge((he(),ye(Ue,{flat:""},{default:$(()=>[Se(_e(se(T)("buttons.cancel")),1)]),_:1})),[[et]])])]),_:1})):Oe("",!0)]),_:1})]),_:1},8,["modelValue"])]))}}),Me=0,Ne=9999,dt=Pe({__name:"YearSelector",props:{modelValue:{default:()=>[]},maxLength:{default:6},label:{},readonly:{type:Boolean}},emits:["update:modelValue"],setup(Ce,{emit:Ee}){const T=Ce,R=Ee,{t:j}=Qe(),ae=ee([]),H=ee([]),oe=ee(null),f=ee(""),le=(g,p=0,_=9999)=>{let m=`${g}`.split("-").map(z=>z===""?"":parseInt(z)),[w,V]=m;return m.length===1&&(V=w),w===""&&(w=p),V===""&&(V=_),{start:`${w}`,end:`${V}`}},N=(g,p=0,_=9999)=>{let{start:m,end:w}=g;if(!(+m===p&&+w===_)){if(m===w)return m;+m===p&&(m=""),+w===_&&(w="")}return[m,w].join("-")},re=g=>{g.sort((p,_)=>p.start===_.start?p.end>_.end?-1:1:p.start<_.start?-1:1)},W=g=>{g=Ie.exports.cloneDeep(g),re(g);let p={};const _=[];return g.forEach(m=>{if(Object.values(p).length===0)return p=m;let{end:w}=p;const{start:V,end:z}=m,v=V<=w,t=z>=w;v&&t&&(p.end=z),v||(_.push(p),p=m)}),Object.values(p).length!==0&&_.push(p),_},Z=()=>{var g;(g=oe.value)==null||g.validate()},ne=()=>{const g=f.value,p=g.split("-").map(t=>t===""?"":parseInt(t)),[_,m]=p,w=m!=="",V=_!=="",z=w&&V;return p.length===1&&g!==""&&(+_<1e3||+_>9999)||z&&(+_<1e3||+m>9999)||w&&(m<1e3||m>9999)||V&&(_<1e3||_>9999)||p.length>2?j("errors.yearRange"):p.length===2&&p[1]!==""&&_>m?j("errors.yearRangeOrder"):!0},ue=(g,p)=>{var m;Z(),!((m=oe.value)!=null&&m.hasError)&&g!==""&&p(g)};return Re(()=>T.modelValue,g=>g&&(ae.value=W(g)),{immediate:!0}),Re(()=>ae.value,(g,p)=>{!Ie.exports.isEqual(g,p)&&(H.value=g.map(m=>N(m,Me,Ne)),R("update:modelValue",g))},{immediate:!0}),Re(()=>H.value,g=>{ae.value=g.map(p=>le(p,Me,Ne))}),(g,p)=>(he(),ye(se(Be),{ref_key:"selector",ref:oe,modelValue:H.value,"onUpdate:modelValue":p[0]||(p[0]=_=>H.value=_),rules:[ne],label:g.label,readonly:g.readonly,"lazy-rules":"ondemand",multiple:"","use-input":"","use-chips":"","hide-dropdown-icon":"","no-error-icon":"",onNewValue:ue,onKeyup:p[1]||(p[1]=_=>Z()),onBlur:p[2]||(p[2]=_=>{var m;return(m=oe.value)==null?void 0:m.resetValidation()}),onInputValue:p[3]||(p[3]=_=>f.value=_)},null,8,["modelValue","rules","label","readonly"]))}});export{ut as _,dt as a};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
