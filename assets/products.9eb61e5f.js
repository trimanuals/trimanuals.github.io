import{bP as x,r,aJ as H,u as J,a as l,cs as U,ct as V,cu as j,cv as z,cw as G,aV as a,bC as c,bE as O}from"./index.6def9867.js";import{u as K}from"./product-details.5bd53194.js";const pt=x("products",()=>{const u=r([]),P=r([]),g=r(),i=r(),h=r([]),v=r([]),w=r([]),S=r([]),D=r([]),B=r(),b=r(!1),y=r([]),I=H(),M=J(),{isNetworkConnected:N}=l(M),_=U(),{documents:R}=l(_),W=V(),{documentTypes:Y}=l(W),$=j(),{documentTabs:q}=l($),E=K(),{productDetail:A}=l(E),F=z(),T=G();return{product:i,products:u,productCount:g,getAllProducts:async e=>{try{const t=await a.get("/products",{params:{...e}}),{products:s,productCount:o}=t.data;u.value=s,g.value=o}catch(t){c(t)}},loadProductInstanceById:async e=>{try{const t=await a.get(`/products/${e}`);i.value=t.data}catch(t){t.response&&t.response.status===404&&N.value?I.push("/404"):c(t)}},getProductBySerial:async e=>{u.value=u.value||[],y.value=[];try{const t=await a.get(`/products/search/${e.toUpperCase()}`);return u.value.push(t.data),t}catch(t){t&&(t.request.status===400||t.request.status===404||t.request.status===500)&&y.value.push(!0),c(t)}},createProduct:async e=>{try{return(await a.post("/products",e)).data}catch(t){throw c(t),t}},updateProduct:async e=>{const{_id:t,serialNumber:s,serialNumberStub:o,modelCode:f,modelName:p,modelYear:n,engineNo:m,marketSpec:d}=e,k={serialNumber:s,serialNumberStub:o,modelCode:f,modelName:p,modelYear:n,engineNo:m,marketSpec:d};try{await a.patch(`/products/${t}`,k)}catch(C){throw c(C),C}},deleteProduct:async e=>{try{(await a.delete(`/products/${e}`)).status===204?O("positive"):O("negative")}catch(t){throw c(t),t}},getProductTypes:async e=>{try{const t=await a.get("/products/product-types",{params:{brand:e}});return h.value=t.data.filter(Boolean),t}catch(t){throw c(t),t}},getProductRanges:async(e,t)=>{try{const s=await a.get("/products/product-ranges",{params:{brand:e,productType:t}});return v.value=s?s.data:null,s}catch(s){throw c(s),s}},getModelNames:async(e,t,s)=>{try{const o=await a.get("/products/model-names",{params:{brand:e,productType:t,productRange:s}});return w.value=o?o.data:[],o}catch(o){c(o)}},modelSearchModelNames:w,getModelYears:async e=>{try{const t=await a.get("/products/model-years",{params:{modelName:e}});return S.value=t?t.data.sort():null,t}catch(t){c(t)}},modelSearchModelYears:S,modelSearchProductTypes:h,modelSearchProductRanges:v,getModelCodes:async()=>{try{const e=await a.get("/products/model-codes");return D.value=e?e.data:null,e}catch(e){c(e)}},modelCodes:D,serialSearch:B,isFoundProductsAvailable:b,updateFoundProductsAvailable:e=>b.value=e,productError:y,loadAllProductsWithOfflineDocuments:async()=>{const t=(await T.getAllOfflineProductData()).map(async o=>{const f=o.documents.map(n=>n._id),p=await F.getOfflineDocumentsByIds(f);if(p.length)return{...o,documents:o.documents.map(n=>{var m;return{...n,isAvailableOffline:n._id===((m=p.find(d=>(d==null?void 0:d._id)===n._id))==null?void 0:m._id)}})}}),s=await Promise.all(t);P.value=s.filter(o=>o).map(o=>o)},offlineProductsWithDocsData:P,loadOfflineProductById:async e=>{var s,o;const t=await T.getOfflineProductById(e);!(t!=null&&t.product)&&!(t!=null&&t.productDetails)||(R.value=t.documents||[],Y.value=t.documentTypes||[],q.value=t.documentTabs||[],((s=t.product)==null?void 0:s._id)===e?(i.value=t.product,A.value=void 0):((o=t.productDetails)==null?void 0:o._id)===e&&(A.value=t.productDetails,i.value=void 0))}}});export{pt as u};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
